<?xml version="1.0"?>
<project name="Developer Modified Build File" basedir=".">
	<!-- ============================================================== -->
	<!-- This file is designed to allow the developer to extend the     -->
	<!-- build process without having to edit the master build.xml      -->
	<!-- file. DO NOT REMOVE ANY TARGETS                                -->
	<!-- ============================================================== -->


	<!-- ============================================================== -->
	<!-- Place any other properties you will need here                  -->
	<!-- ============================================================== -->
    <property name="java.naming.factory.initial" value="org.jboss.security.jndi.JndiLoginInitialContextFactory"/>
    <property name="java.naming.provider.url.host" value="localhost"/>
    <property name="java.naming.provider.url.port" value="1099"/>
    <property name="java.naming.provider.url" value="jnp://${java.naming.provider.url.host}:${java.naming.provider.url.port}"/>
    <property name="java.naming.factory.url.pkgs" value="org.jboss.naming:org.jnp.interfaces"/>
    <property name="java.naming.security.principal" value="ejbclient"/>
    <property name="java.naming.security.credentials" value="pass"/>
    <property name="cobertura.dir" value="tools/cobertura" />
    
    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="cobertura.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
    
    <patternset id="dependent.schema.folders.ps">
        <include name="core/**/*"/>
        <include name="pkgdata/**/*"/>
        <include name="ws/**/*"/>
        <include name="wsrf/**/*"/>
    </patternset>
    <property name="gar.name" value="${service.deployment.dir.name}.gar" />

	<!-- ============================================================== -->
	<!-- Create any extended Classpaths here                            -->
	<!-- ============================================================== -->
	<target name="defineExtendedClasspaths">
		<path id="base.extended.classpath">
		</path>
		<path id="service.build.extended.classpath">
		</path>
		<path id="service.run.extended.classpath">
		</path>
		<path id="test.build.extended.classpath">
		</path>
		<path id="test.run.extended.classpath">
		</path>
		<path id="run.extended.classpath">
		</path>
		<path id="tasks.run.extended.classpath">
		</path>
	</target>


	<!-- ============================================================== -->
	<!-- Pre Init Target                                                -->
	<!-- ============================================================== -->
	<target name="preInit">
	    <copy todir="${schema.dir}">
	    	<fileset dir="${ext.globus.dir}/schema">
                <patternset refid="dependent.schema.folders.ps"/>
	    	</fileset>
        </copy>
	</target>

	<!-- ============================================================== -->
	<!-- Post Init Build Target                                         -->
	<!-- ============================================================== -->
	<target name="postInit">

	</target>


	<!-- ============================================================== -->
	<!-- Pre Stubs Target                                               -->
	<!-- ============================================================== -->
	<target name="preStubs">
        
	</target>

	<!-- ============================================================== -->
	<!-- Post Stubs Build Target                                        -->
	<!-- ============================================================== -->
	<target name="postStubs">
        <java classname="com.sun.tools.xjc.XJCFacade" fork="true" failonerror="true">
            <classpath>
                <pathelement location="${basedir}/tools/lib/jaxb-xjc.jar"/>
                <pathelement location="${basedir}/lib/jaxb-api.jar"/>
                <pathelement location="${basedir}/lib/jaxb-impl.jar"/>
                <pathelement location="${basedir}/lib/activation.jar"/>
                <pathelement location="${basedir}/lib/jsr173_1.0_api.jar"/>
            </classpath>
            <arg value="-xmlschema"/><arg file="${basedir}/schema/CoppaPO/CoppaPOTypes.xsd"/>
            <!--arg value="-wsdl"/><arg file="${basedir}/schema/CoppaPO/CoppaPO.wsdl"/-->
            <arg value="-d"/><arg file="${stubs.src}"/>
            <arg value="-b"/><arg file="${basedir}/schema/CoppaPO/jaxb-config.xjb"/>
            <!--arg value="-p"/><arg value="gov.nih.nci.coppa.po"/-->
            <arg value="-nv"/>
            <arg value="-verbose"/>
        </java>
        
	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Stubs Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Stubs Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Stubs Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Stubs Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="postCompile">
        <!-- Copy the source code, wsdd, properties, etc to the build dir for include in the jar -->
        <copy toDir="${build.dest}" filtering="true" overwrite="true">
        	<filterset begintoken="$${" endtoken="}" >
        	    <filter token="java.naming.factory.initial" value="${java.naming.factory.initial}"/>
        	    <filter token="java.naming.provider.url.host" value="${java.naming.provider.url.host}"/>
        	    <filter token="java.naming.provider.url.port" value="${java.naming.provider.url.port}"/>
        	    <filter token="java.naming.provider.url" value="${java.naming.provider.url}"/>
        	    <filter token="java.naming.factory.url.pkgs" value="${java.naming.factory.url.pkgs}"/>
        	    <filter token="java.naming.security.principal" value="${java.naming.security.principal}"/>
        	    <filter token="java.naming.security.credentials" value="${java.naming.security.credentials}"/>
        	</filterset>
            <fileset dir="${src.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preJar">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Build Target                                          -->
	<!-- ============================================================== -->
	<target name="postJar">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Tests Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Tests Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Tests Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Tests Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Clean Target                                               -->
	<!-- ============================================================== -->
	<target name="preClean">
	    <delete>
	        <fileset dir="${schema.dir}">
	            <patternset refid="dependent.schema.folders.ps"/>
	        </fileset>
	    </delete>
	    <delete>
	        <dirset dir="${schema.dir}">
	            <include name="**/*"/>
	            <exclude name="${introduce.skeleton.service.name}/**"/>
	        </dirset>
	    </delete>
	</target>

	<!-- ============================================================== -->
	<!-- Post Clean Target                                              -->
	<!-- ============================================================== -->
	<target name="postClean">

	</target>

    
	<!-- ============================================================== -->
	<!-- Call any tests.                                                -->
	<!-- ============================================================== -->
	<target name="test" depends="checkGlobus, compileTests" description="Runs the service's tests.">
	    <delete file="build/cobertura.ser" />

	    <cobertura-instrument todir="${build.dir}/intrumented" datafile="${basedir}/build/cobertura.ser">
	        <fileset dir="${build.dest}">
	            <include name="**/*.class" />
	            <exclude name="**/*Test.class" />
	        </fileset>
	    </cobertura-instrument>
	    
	    <echo message="Test results dir: ${junit.results.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<junit dir="${basedir}" printsummary="yes" showoutput="true" fork="true">
		    <sysproperty key="net.sourceforge.cobertura.datafile"
		    		file="${basedir}/build/cobertura.ser" />
		    <classpath location="${build.dir}/intrumented" />
		    <classpath refid="test.run.classpath" />
		    <classpath refid="cobertura.classpath" />
		    <formatter type="xml" />
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/Test*.java" />
                                        <include name="**/*Test.java" />
					<include name="**/*TestCase.java" />
				</fileset>
			</batchtest>
		</junit>
	    <cobertura-report datafile="${basedir}/build/cobertura.ser" 
	         			  format="html" 
	        			  destdir="${build.dir}/cobertura" 
	        			  srcdir="${src.dir}" />
	    <cobertura-check datafile="${basedir}/build/cobertura.ser"
	    			     totalbranchrate="4" 
	        		     totallinerate="2"/> <!-- Increase these as unit tests are written -->
	</target>


</project>