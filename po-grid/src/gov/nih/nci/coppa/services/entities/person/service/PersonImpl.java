package gov.nih.nci.coppa.services.entities.person.service;

import gov.nih.nci.coppa.iso.Ii;
import gov.nih.nci.coppa.po.grid.dto.transform.DtoTransformException;
import gov.nih.nci.coppa.po.grid.dto.transform.IITransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.PersonTransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.faults.EntityValidationFaultTransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.faults.FaultUtil;
import gov.nih.nci.coppa.po.grid.dto.transform.po.faults.NullifiedEntityFaultTransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.faults.NullifiedRoleFaultTransformer;
import gov.nih.nci.coppa.po.grid.remote.InvokePersonEjb;
import gov.nih.nci.po.service.EntityValidationException;
import gov.nih.nci.services.correlation.NullifiedRoleException;
import gov.nih.nci.services.entity.NullifiedEntityException;
import gov.nih.nci.services.person.PersonDTO;

import java.rmi.RemoteException;
import java.util.List;

import org.apache.log4j.LogManager;

/** 
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class PersonImpl extends PersonImplBase {

    private static org.apache.log4j.Logger logger = LogManager.getLogger(PersonImpl.class);
    private InvokePersonEjb personService = new InvokePersonEjb();
	public PersonImpl() throws RemoteException {
		super();
	}
	
  public gov.nih.nci.coppa.po.Person getById(gov.nih.nci.coppa.po.Id id) throws RemoteException, gov.nih.nci.coppa.po.faults.NullifiedEntityFault {
      try {
//          throw NullifiedEntityFaultTransformer.INSTANCE.toXml(new NullifiedEntityException(IITransformer.INSTANCE.toDto(id), IITransformer.INSTANCE.toDto(id)));
          Ii ii_iso = IITransformer.INSTANCE.toDto(id);
          PersonDTO person_iso = personService.getPerson(ii_iso);
          gov.nih.nci.coppa.po.Person person = PersonTransformer.INSTANCE.toXml(person_iso);
          return person;
      } catch (Exception e) {
          logger.error("Error in getting Person.", e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.po.Id create(gov.nih.nci.coppa.po.Person person) throws RemoteException, gov.nih.nci.coppa.po.faults.EntityValidationFault {
      //TODO: Implement this autogenerated method
      throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.StringMap validate(gov.nih.nci.coppa.po.Person person) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.Person[] search(gov.nih.nci.coppa.po.Person person) throws RemoteException {
      try {
          PersonDTO person_iso = PersonTransformer.INSTANCE.toDto(person);
          List<PersonDTO> results = personService.search(person_iso);
          if (results == null) {
              return null;
          }
          logger.debug("Person(s) found from COPPA:" + results.size());
          gov.nih.nci.coppa.po.Person[] returnResults = new gov.nih.nci.coppa.po.Person[results.size()];
          int i = 0;
          for (PersonDTO person_res : results) {
              gov.nih.nci.coppa.po.Person person_res_tr = PersonTransformer.INSTANCE.toXml(person_res);
              returnResults[i++] = person_res_tr;
          }
          return returnResults;
      } catch (Exception e) {
          logger.error("Error in searching Person(s).", e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public void update(gov.nih.nci.coppa.po.Person person) throws RemoteException, gov.nih.nci.coppa.po.faults.EntityValidationFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void updateStatus(gov.nih.nci.coppa.po.Id targetId,gov.nih.nci.coppa.po.Cd statusCode) throws RemoteException, gov.nih.nci.coppa.po.faults.EntityValidationFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }
  

}

