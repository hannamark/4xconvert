package gov.nih.nci.coppa.services.structuralroles.healthcarefacility.service;

import gov.nih.nci.coppa.iso.Ii;
import gov.nih.nci.coppa.po.HealthCareFacility;
import gov.nih.nci.coppa.po.grid.dto.transform.IITransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.HealthCareFacilityTransformer;
import gov.nih.nci.coppa.po.grid.remote.InvokeHealthCareFacilityEjb;
import gov.nih.nci.services.correlation.HealthCareFacilityDTO;

import java.rmi.RemoteException;
import java.util.List;

import org.apache.log4j.LogManager;

/** 
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class HealthCareFacilityImpl extends HealthCareFacilityImplBase {
    private static org.apache.log4j.Logger logger = LogManager.getLogger(HealthCareFacilityImpl.class);
    
    private InvokeHealthCareFacilityEjb healthCareFacilityService = new InvokeHealthCareFacilityEjb();
    
	public HealthCareFacilityImpl() throws RemoteException {
		super();
	}
	
  public gov.nih.nci.coppa.po.HealthCareFacility getById(gov.nih.nci.coppa.po.Id id) throws RemoteException {
      try {
          Ii ii_iso = IITransformer.INSTANCE.toDto(id);
          HealthCareFacilityDTO hcf_dto = healthCareFacilityService
                  .getHealthCareFacility(ii_iso);
          HealthCareFacility healthCareFacility = HealthCareFacilityTransformer.INSTANCE
                  .toXml(hcf_dto);
          return healthCareFacility;
      } catch (Exception e) {
          logger.error("Error in getting healthcareFacility.", e);
          throw reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.po.HealthCareFacility[] getByIds(gov.nih.nci.coppa.po.Id[] id) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.Id create(gov.nih.nci.coppa.po.HealthCareFacility healthCareFacility) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.StringMap validate(gov.nih.nci.coppa.po.HealthCareFacility healthCareFacility) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.HealthCareFacility[] search(gov.nih.nci.coppa.po.HealthCareFacility healthCareFacility) throws RemoteException {
      try {
          HealthCareFacilityDTO hcf_iso = HealthCareFacilityTransformer.INSTANCE.toDto(healthCareFacility);
          List<HealthCareFacilityDTO> results = healthCareFacilityService.search(hcf_iso);
          if (results == null) {
              return null;
          }
          logger.debug("healthcarefacility searched from COPPA:" + results.size());
          gov.nih.nci.coppa.po.HealthCareFacility [] returnResults = new gov.nih.nci.coppa.po.HealthCareFacility[results.size()];
          int i = 0;
          for (HealthCareFacilityDTO hcf_res : results) {
              gov.nih.nci.coppa.po.HealthCareFacility hcf_res_tr = HealthCareFacilityTransformer.INSTANCE.toXml(hcf_res);
              returnResults[i++] = hcf_res_tr;
          }
          return returnResults;
      } catch (Exception e) {
          logger.error("Error in searching healthcare facility.", e);
          throw reThrowRemote(e);
      }
  }

  public void update(gov.nih.nci.coppa.po.HealthCareFacility healthCareFacility) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void updateStatus(gov.nih.nci.coppa.po.Id targetId,gov.nih.nci.coppa.po.Cd statusCode) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }
  private static RemoteException reThrowRemote(Throwable t) throws RemoteException {
      if (t instanceof RemoteException) {
          throw (RemoteException)t;
      }
      RemoteException re = new RemoteException(t.toString(), t);
      throw re;
  }
}

