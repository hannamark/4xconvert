package gov.nih.nci.coppa.services.structuralroles.identifiedperson.service;

import gov.nih.nci.coppa.iso.Ii;
import gov.nih.nci.coppa.po.IdentifiedPerson;
import gov.nih.nci.coppa.po.grid.dto.transform.IITransformer;
import gov.nih.nci.coppa.po.grid.dto.transform.po.IdentifiedPersonTransformer;
import gov.nih.nci.coppa.po.grid.remote.InvokeIdentifiedPersonEjb;
import gov.nih.nci.services.correlation.IdentifiedPersonDTO;

import java.rmi.RemoteException;
import java.util.List;

import org.apache.log4j.LogManager;

/**
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 *
 * @created by Introduce Toolkit version 1.2
 *
 */
public class IdentifiedPersonImpl extends IdentifiedPersonImplBase {

private static org.apache.log4j.Logger logger = LogManager.getLogger(IdentifiedPersonImpl.class);

    private InvokeIdentifiedPersonEjb identifiedPersonService = new InvokeIdentifiedPersonEjb();

    public IdentifiedPersonImpl() throws RemoteException {
        super();
    }

  public gov.nih.nci.coppa.po.Id create(gov.nih.nci.coppa.po.IdentifiedPerson identifiedPerson) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.IdentifiedPerson getById(gov.nih.nci.coppa.po.Id id) throws RemoteException {
      try {
            Ii ii_iso = IITransformer.INSTANCE.toDto(id);
            IdentifiedPersonDTO idPerson_dto = identifiedPersonService.getIdentifiedPerson(ii_iso);
            IdentifiedPerson idPerson = IdentifiedPersonTransformer.INSTANCE.toXml(idPerson_dto);
            return idPerson;
        } catch (Exception e) {
            logger.error("Error in getting IdentifiedOrganization.", e);
            throw reThrowRemote(e);
        }
  }

  public gov.nih.nci.coppa.po.IdentifiedPerson[] getByIds(gov.nih.nci.coppa.po.Id[] id) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.IdentifiedPerson[] search(gov.nih.nci.coppa.po.IdentifiedPerson identifiedPerson) throws RemoteException {
      try {
          IdentifiedPersonDTO idPer_iso = IdentifiedPersonTransformer.INSTANCE.toDto(identifiedPerson);
          List<IdentifiedPersonDTO> results = identifiedPersonService.search(idPer_iso);
          if (results == null) {
              return null;
          }
          logger.debug("IdentifiedPerson searched from COPPA:" + results.size());
          gov.nih.nci.coppa.po.IdentifiedPerson [] returnResults = new gov.nih.nci.coppa.po.IdentifiedPerson[results.size()];
          int i = 0;
          for (IdentifiedPersonDTO idPer_res : results) {
              gov.nih.nci.coppa.po.IdentifiedPerson idPer_res_tr = IdentifiedPersonTransformer.INSTANCE.toXml(idPer_res);
              returnResults[i++] = idPer_res_tr;
          }
          return returnResults;
      } catch (Exception e) {
          logger.error("Error in searching IdentifiedPerson.", e);
          throw reThrowRemote(e);
      }
  }

  public void update(gov.nih.nci.coppa.po.IdentifiedPerson identifiedPerson) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void updateStatus(gov.nih.nci.coppa.po.Id targetId,gov.nih.nci.coppa.po.Cd statusCode) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.po.StringMap validate(gov.nih.nci.coppa.po.IdentifiedPerson identifiedPerson) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  private static RemoteException reThrowRemote(Throwable t) throws RemoteException {
      if (t instanceof RemoteException) {
          throw (RemoteException)t;
      }
      RemoteException re = new RemoteException(t.toString(), t);
      throw re;
  }

}

