package gov.nih.nci.coppa.services.pa.studysiteparticipationservice.service.globus;

import gov.nih.nci.coppa.services.pa.studysiteparticipationservice.service.StudySiteParticipationServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the PAServicesImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class StudySiteParticipationServiceProviderImpl{
	
	StudySiteParticipationServiceImpl impl;
	
	public StudySiteParticipationServiceProviderImpl() throws RemoteException {
		impl = new StudySiteParticipationServiceImpl();
	}
	

    public gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.CreateParticipatingSiteForPropTrialResponse createParticipatingSiteForPropTrial(gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.CreateParticipatingSiteForPropTrialRequest params) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.CreateParticipatingSiteForPropTrialResponse boxedResult = new gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.CreateParticipatingSiteForPropTrialResponse();
    boxedResult.setId(impl.createParticipatingSiteForPropTrial(params.getStudyProtocolId().getId(),params.getOrganization().getOrganization(),params.getStudySite().getStudySite(),params.getStatus().getStudySiteAccrualStatus(),params.getInvestigator().getPerson()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.UpdateParticipatingSiteForPropTrialResponse updateParticipatingSiteForPropTrial(gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.UpdateParticipatingSiteForPropTrialRequest params) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.UpdateParticipatingSiteForPropTrialResponse boxedResult = new gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.UpdateParticipatingSiteForPropTrialResponse();
    impl.updateParticipatingSiteForPropTrial(params.getStudyProtocolId().getId(),params.getOrganizationId().getId(),params.getStudySite().getStudySite(),params.getStatus().getStudySiteAccrualStatus(),params.getInvestigator().getPerson());
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.IsParticipatingSiteResponse isParticipatingSite(gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.IsParticipatingSiteRequest params) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.IsParticipatingSiteResponse boxedResult = new gov.nih.nci.coppa.services.pa.studysiteparticipationservice.stubs.IsParticipatingSiteResponse();
    boxedResult.setBl(impl.isParticipatingSite(params.getStudyProtocolId().getId(),params.getOrganizationId().getId()));
    return boxedResult;
  }

}
