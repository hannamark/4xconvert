package gov.nih.nci.coppa.services.pa.studysitecontactservice.service;

import gov.nih.nci.coppa.services.pa.StudySiteContact;
import gov.nih.nci.coppa.services.pa.grid.GenericStudyPaGridServiceImpl;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.StudySiteContactTransformer;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.faults.FaultUtil;
import gov.nih.nci.coppa.services.pa.grid.remote.InvokeStudySiteContactEjb;
import gov.nih.nci.iso21090.Ii;
import gov.nih.nci.iso21090.grid.dto.transform.iso.IITransformer;
import gov.nih.nci.pa.iso.dto.StudySiteContactDTO;

import java.rmi.RemoteException;
import java.util.List;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 * Implementation of the StudySiteContactService. Dispatches to the remote EJBs and the Transformers.
 *
 * @author mshestopalov
 */
public class StudySiteContactServiceImpl extends StudySiteContactServiceImplBase {

    private static final Logger logger = LogManager.getLogger(StudySiteContactServiceImpl.class);
    private final InvokeStudySiteContactEjb studySiteContactService = new InvokeStudySiteContactEjb();
    private GenericStudyPaGridServiceImpl<StudySiteContactDTO, StudySiteContact> impl =
            new GenericStudyPaGridServiceImpl<StudySiteContactDTO, StudySiteContact>(StudySiteContact.class,
                    StudySiteContactDTO.class);

    public StudySiteContactServiceImpl() throws RemoteException {
        super();
    }

  public gov.nih.nci.coppa.services.pa.StudySiteContact get(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      return impl.get(id);
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact[] getByStudySite(gov.nih.nci.coppa.services.pa.Id studySiteId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    StudySiteContact[] result = null;
    try {
        Ii iiDto = IITransformer.INSTANCE.toDto(studySiteId);
        List<StudySiteContactDTO> dtosList = studySiteContactService.getByStudySite(iiDto);

        result = new StudySiteContact[dtosList.size()];
        int i = 0;
        for (StudySiteContactDTO tEmp : dtosList) {
            result[i] = StudySiteContactTransformer.INSTANCE.toXml(tEmp);
            i++;
        }
        return result;
    } catch (Exception e) {
        logger.error(e.getMessage(), e);
        throw FaultUtil.reThrowRemote(e);
    }
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact[] getByStudyProtocol(gov.nih.nci.coppa.services.pa.Id studyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      return impl.getByStudyProtocol(studyProtocolId);
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact[] getByStudyProtocolAndRole(gov.nih.nci.coppa.services.pa.Id studyProtocolId,gov.nih.nci.coppa.services.pa.StudySiteContact studySiteContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    StudySiteContact[] result = null;
    try {
        Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
        StudySiteContactDTO spcDto = StudySiteContactTransformer.INSTANCE.toDto(studySiteContact);
        List<StudySiteContactDTO> dtosList = studySiteContactService.getByStudyProtocol(iiDto, spcDto);

        result = new StudySiteContact[dtosList.size()];
        int i = 0;
        for (StudySiteContactDTO tEmp : dtosList) {
            result[i] = StudySiteContactTransformer.INSTANCE.toXml(tEmp);
            i++;
        }
        return result;
    } catch (Exception e) {
        logger.error(e.getMessage(), e);
        throw FaultUtil.reThrowRemote(e);
    }
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact[] getByStudyProtocolAndRoles(gov.nih.nci.coppa.services.pa.Id studyProtocolId,gov.nih.nci.coppa.services.pa.StudySiteContact[] studySiteContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    StudySiteContact[] result = null;
    try {
        Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
        List<StudySiteContactDTO> dtosList =
                studySiteContactService.getByStudyProtocol(iiDto, StudySiteContactTransformer.INSTANCE.convert(studySiteContact));
        result = new StudySiteContact[dtosList.size()];
        int i = 0;
        for (StudySiteContactDTO tEmp : dtosList) {
            result[i] = StudySiteContactTransformer.INSTANCE.toXml(tEmp);
            i++;
        }
        return result;
    } catch (Exception e) {
        logger.error(e.getMessage(), e);
        throw FaultUtil.reThrowRemote(e);
    }
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact update(gov.nih.nci.coppa.services.pa.StudySiteContact studySiteContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void copy(gov.nih.nci.coppa.services.pa.Id fromStudyProtocolId,gov.nih.nci.coppa.services.pa.Id toStudyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudySiteContact create(gov.nih.nci.coppa.services.pa.StudySiteContact studySiteContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void delete(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

}

