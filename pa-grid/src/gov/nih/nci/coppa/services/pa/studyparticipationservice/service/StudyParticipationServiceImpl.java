package gov.nih.nci.coppa.services.pa.studyparticipationservice.service;

import gov.nih.nci.coppa.iso.Ii;
import gov.nih.nci.coppa.services.grid.dto.transform.DtoTransformException;
import gov.nih.nci.coppa.services.grid.dto.transform.iso.IITransformer;
import gov.nih.nci.coppa.services.pa.StudyParticipation;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.StudyParticipationTransformer;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.faults.FaultUtil;
import gov.nih.nci.coppa.services.pa.grid.remote.InvokeStudyParticipationEjb;
import gov.nih.nci.pa.iso.dto.StudyParticipationDTO;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 * Implementation of the StudyParticipationService. Dispatches to the remote EJBs and the Transformers.
 *
 * @author mshestopalov
 */
public class StudyParticipationServiceImpl extends StudyParticipationServiceImplBase {

    private static final Logger logger = LogManager.getLogger(StudyParticipationServiceImpl.class);
    private final InvokeStudyParticipationEjb studyParService = new InvokeStudyParticipationEjb();

    public StudyParticipationServiceImpl() throws RemoteException {
        super();
    }

    private StudyParticipation[] convert(List<StudyParticipationDTO> dtosList) throws DtoTransformException {
        if (dtosList == null) {
            return null;
        }
        StudyParticipation[] result = null;
        result = new StudyParticipation[dtosList.size()];
        int i = 0;
        for (StudyParticipationDTO tEmp : dtosList) {
            result[i] = StudyParticipationTransformer.INSTANCE.toXml(tEmp);
            i++;
        }
        return result;
    }

    private List<StudyParticipationDTO> convert(StudyParticipation[] arrayList) throws DtoTransformException {
        List<StudyParticipationDTO> result = null;
        result = new ArrayList<StudyParticipationDTO>();
        for (StudyParticipation tEmp : arrayList) {
            result.add(StudyParticipationTransformer.INSTANCE.toDto(tEmp));
        }
        return result;
    }

  public gov.nih.nci.coppa.services.pa.StudyParticipation[] getByStudyProtocolAndRole(gov.nih.nci.coppa.services.pa.Id studyProtocolId,
          gov.nih.nci.coppa.services.pa.StudyParticipation studyParticipation)
      throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      StudyParticipation[] result = null;
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          StudyParticipationDTO spcDto = StudyParticipationTransformer.INSTANCE
                  .toDto(studyParticipation);
          List<StudyParticipationDTO> dtosList = studyParService.getByStudyProtocol(iiDto, spcDto);

          result = convert(dtosList);
          return result;
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation[] getByStudyProtocolAndRoles(gov.nih.nci.coppa.services.pa.Id studyProtocolId,
          gov.nih.nci.coppa.services.pa.StudyParticipation[] studyParticipation)
  throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      StudyParticipation[] result = null;
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          List<StudyParticipationDTO> spcDtos = convert(studyParticipation);
          List<StudyParticipationDTO> dtosList = studyParService.getByStudyProtocol(iiDto, spcDtos);

          result = convert(dtosList);

          return result;
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation[] getByStudyProtocol(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(id);
          List<StudyParticipationDTO> dtosList = studyParService.getByStudyProtocol(iiDto);
          return convert(dtosList);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public void copy(gov.nih.nci.coppa.services.pa.Id fromStudyProtocolId,gov.nih.nci.coppa.services.pa.Id toStudyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation[] getCurrentByStudyProtocol(gov.nih.nci.coppa.services.pa.Id studyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          List<StudyParticipationDTO> dtosList = studyParService.getCurrentByStudyProtocol(iiDto);
          return convert(dtosList);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation get(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(id);
          StudyParticipationDTO dto = studyParService.get(iiDto);
          return StudyParticipationTransformer.INSTANCE.toXml(dto);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation create(gov.nih.nci.coppa.services.pa.StudyParticipation studyParticipation) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudyParticipation update(gov.nih.nci.coppa.services.pa.StudyParticipation studyParticipation) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void delete(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

}

