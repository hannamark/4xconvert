package gov.nih.nci.coppa.services.pa.studycontactservice.service;

import gov.nih.nci.coppa.iso.Ii;
import gov.nih.nci.coppa.services.grid.dto.transform.DtoTransformException;
import gov.nih.nci.coppa.services.grid.dto.transform.iso.IITransformer;
import gov.nih.nci.coppa.services.pa.StudyContact;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.StudyContactTransformer;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.faults.FaultUtil;
import gov.nih.nci.coppa.services.pa.grid.remote.InvokeStudyContactEjb;
import gov.nih.nci.pa.iso.dto.StudyContactDTO;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 * Implementation of the StudyContactService. Dispatches to the remote EJBs and the Transformers.
 *
 * @author mshestopalov
 */
public class StudyContactServiceImpl extends StudyContactServiceImplBase {

    private static final Logger logger = LogManager.getLogger(StudyContactServiceImpl.class);
    private final InvokeStudyContactEjb studyContactService = new InvokeStudyContactEjb();
    public StudyContactServiceImpl() throws RemoteException {
        super();
    }

  private StudyContact[] convert(List<StudyContactDTO> dtosList) throws DtoTransformException {
        if (dtosList == null) {
            return null;
        }
        StudyContact[] result = null;
        result = new StudyContact[dtosList.size()];
        int i = 0;
        for (StudyContactDTO tEmp : dtosList) {
            result[i] = StudyContactTransformer.INSTANCE.toXml(tEmp);
            i++;
        }
        return result;
  }

  private List<StudyContactDTO> convert(StudyContact[] arrayList) throws DtoTransformException {
        List<StudyContactDTO> result = null;
        result = new ArrayList<StudyContactDTO>();
        for (StudyContact tEmp : arrayList) {
            result.add(StudyContactTransformer.INSTANCE.toDto(tEmp));
        }
        return result;
  }

  public gov.nih.nci.coppa.services.pa.StudyContact[] getByStudyProtocolAndRole(gov.nih.nci.coppa.services.pa.Id studyProtocolId,gov.nih.nci.coppa.services.pa.StudyContact studyContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      StudyContact[] result = null;
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          StudyContactDTO spcDto = StudyContactTransformer.INSTANCE
                  .toDto(studyContact);
          List<StudyContactDTO> dtosList = studyContactService.getByStudyProtocol(iiDto, spcDto);

          result = convert(dtosList);
          return result;
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyContact[] getByStudyProtocolAndRoles(gov.nih.nci.coppa.services.pa.Id studyProtocolId,gov.nih.nci.coppa.services.pa.StudyContact[] studyContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          StudyContact[] result = null;
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          List<StudyContactDTO> spcDtos = convert(studyContact);
          List<StudyContactDTO> dtosList = studyContactService.getByStudyProtocol(iiDto, spcDtos);

          result = convert(dtosList);

          return result;
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyContact[] getByStudyProtocol(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(id);
          List<StudyContactDTO> dtosList = studyContactService.getByStudyProtocol(iiDto);
          return convert(dtosList);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public void copy(gov.nih.nci.coppa.services.pa.Id fromStudyProtocolId,gov.nih.nci.coppa.services.pa.Id toStudyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudyContact[] getCurrentByStudyProtocol(gov.nih.nci.coppa.services.pa.Id studyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(studyProtocolId);
          List<StudyContactDTO> dtosList = studyContactService.getCurrentByStudyProtocol(iiDto);
          return convert(dtosList);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyContact get(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          Ii iiDto = IITransformer.INSTANCE.toDto(id);
          StudyContactDTO dto = studyContactService.get(iiDto);
          return StudyContactTransformer.INSTANCE.toXml(dto);
      } catch (Exception e) {
          logger.error(e.getMessage(), e);
          throw FaultUtil.reThrowRemote(e);
      }
  }

  public gov.nih.nci.coppa.services.pa.StudyContact create(gov.nih.nci.coppa.services.pa.StudyContact studyContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudyContact update(gov.nih.nci.coppa.services.pa.StudyContact studyContact) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public void delete(gov.nih.nci.coppa.services.pa.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

}

