package gov.nih.nci.coppa.services.pa.studyrelationshipservice.service;

import gov.nih.nci.coppa.services.LimitOffset;
import gov.nih.nci.coppa.services.grid.dto.transform.common.LimitOffsetTransformer;
import gov.nih.nci.coppa.services.pa.StudyRelationship;
import gov.nih.nci.coppa.services.pa.grid.GenericPaGridServiceImpl;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.StudyRelationshipTransformer;
import gov.nih.nci.coppa.services.pa.grid.dto.pa.faults.FaultUtil;
import gov.nih.nci.coppa.services.pa.grid.remote.InvokeStudyRelationshipEjb;
import gov.nih.nci.pa.iso.dto.StudyRelationshipDTO;

import java.rmi.RemoteException;
import java.util.List;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 * Implementation of the StudyRelationshipService. Dispatches to the remote EJBs and the Transformers.
 * @author mshestopalov
 *
 */
public class StudyRelationshipServiceImpl extends StudyRelationshipServiceImplBase {

    private static final Logger logger = LogManager.getLogger(StudyRelationshipServiceImpl.class);
    private final InvokeStudyRelationshipEjb studyRelationshipService = new InvokeStudyRelationshipEjb();
    private GenericPaGridServiceImpl<StudyRelationshipDTO, StudyRelationship> impl
      = new GenericPaGridServiceImpl<StudyRelationshipDTO, StudyRelationship>(StudyRelationship.class, StudyRelationshipDTO.class);

    static {
        gov.nih.nci.coppa.services.pa.grid.PAGridUtils.initIso21090Transformers();
    }


    public StudyRelationshipServiceImpl() throws RemoteException {
        super();
    }

  public gov.nih.nci.coppa.services.pa.StudyRelationship get(gov.nih.nci.iso21090.extensions.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    return impl.get(id);
  }

  public gov.nih.nci.coppa.services.pa.StudyRelationship[] search(gov.nih.nci.coppa.services.pa.StudyRelationship studyRelationship,gov.nih.nci.coppa.common.LimitOffset limitOffset) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
      try {
          LimitOffset limitOffsetDTO = LimitOffsetTransformer.INSTANCE.toDto(limitOffset);
          StudyRelationshipDTO org = StudyRelationshipTransformer.INSTANCE.toDto(studyRelationship);
          List<StudyRelationshipDTO> results = studyRelationshipService.search(org, limitOffsetDTO);
          StudyRelationship[] returnResults = StudyRelationshipTransformer.INSTANCE.convert(results);
          return returnResults;
      } catch (Exception e) {
          logger.error("SEARCH:STUDYRELATIONSHIP", e);
          throw FaultUtil.reThrowRemote(e);
      }

  }

  public gov.nih.nci.coppa.services.pa.StudyRelationship create(gov.nih.nci.coppa.services.pa.StudyRelationship studyRelationship) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
      throw new RemoteException("Not yet implemented");
  }

  public gov.nih.nci.coppa.services.pa.StudyRelationship update(gov.nih.nci.coppa.services.pa.StudyRelationship studyRelationship) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    //TODO: Implement this autogenerated method
      throw new RemoteException("Not yet implemented");
  }

  public void delete(gov.nih.nci.iso21090.extensions.Id id) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
     //TODO: Implement this autogenerated method
      throw new RemoteException("Not yet implemented");
  }

}

