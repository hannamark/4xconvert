<?xml version="1.0" encoding="UTF-8"?>

<!-- ========================================================================== -->
<!-- Master ant script for Accrual application                                  -->
<!-- ========================================================================== -->

<project name="accrual" default="deploy-notest" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/../build-pa/project.properties" />
    <property name="common.dir" value="${basedir}/../build-pa/common"/>
    <property name="software.dir" value="${basedir}/.."/>

    <property name="ear.dir" value="${basedir}/ear"/>
    <property name="ear.ear" value="${ear.dir}/target/accrual.ear"/>
    <property name="ear.build.file" value="build.xml"/>
    <property name="ear.clean.target" value="pre-clean"/>
    <property name="ear.build.target" value="ear"/>
    <property name="accrual-web.dir" value="${basedir}/accrual-web"/>
    <property name="accrual-web.war" value="${accrual-web.dir}/target/accrual.war"/>
    <property name="accrual-web.build.file" value="build.xml"/>
    <property name="accrual-web.clean.target" value="pre-clean"/>
    <property name="accrual-web.build.target" value="war"/>
    <property name="services.dir" value="${basedir}/services"/>
    <property name="services.jar" value="${services.dir}/target/accrual-services.jar"/>
    <property name="services.build.file" value="build.xml"/>
    <property name="services.clean.target" value="pre-clean"/>
    <property name="services.build.target" value="jar"/>

    <property name="target.dir" location="${software.dir}/target/accrual" />
    <property name="bda-utils.dir" location="${target.dir}/bda-utils" />
    <property name="bda-download.dir" location="${common.dir}/bda-download" />

    <property name="ivy.settings.file" location="${common.dir}/ivysettings.xml" />
    <property name="lib.dir" value="${target.dir}/lib"/>
    <property name="local.repo.dir" location="${software.dir}/local-ivy-repo" />

    <available file="${accrual-ear.build.dir}" type="dir" property="accrual-ear.build.present" />
    
    <property name="accrual.version" value="3.8-SNAPSHOT"/>

    <path id="ivy.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <property name="bda-download.file" value="bda-ivy-2.0.0-build.xml"/>

    <ant inheritAll="false" inheritRefs="false" antfile="${bda-download.file}" target="retrieve-bda"
        dir="${bda-download.dir}">
        <property name="bda.version" value="${bda.version}" />
        <property name="bda-utils.dir" location="${bda-utils.dir}" />
        <property name="lib.dir" location="${lib.dir}" />
        <property name="software.dir" location="${software.dir}" />
        <property name="target.dir" location="${target.dir}" />
    </ant>

    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath"/>

    <!-- ====================================================================== -->
    <!-- Deploy targets                                                         -->
    <!-- ====================================================================== -->

    <target name="set-full">
        <property name="notask" value="" />
    </target>

    <target name="set-notask">
        <property name="notask" value="-notest" />
    </target>

    <target name="echoTime">
        <tstamp>
            <format property="now" pattern="yyyy MMMM dd HH:mm:ss" locale="en"/>
        </tstamp>
        <echo message="Build completed at ${now}" />
    </target>

    <target name="accrual-dist" depends="accrual-ear-ear" if="accrual-ear.build.present">
        <copy todir="${accrual-ear.build.dir}" file="${ear.ear}"/>
    </target>

    <target name="deploy-ear" depends="accrual-dist">
        <available file="${jboss.deploy.dir}" type="dir" property="container.present"/>
        <fail unless="container.present" message="Deploy directory ${jboss.deploy.dir} not available."/>
        <available file="${ear.ear}" property="earEarPresent"/>
        <fail unless="earEarPresent" message="Ear file not found."/>
        <copy todir="${jboss.deploy.dir}" file="${ear.ear}"/>
    </target>

    <target name="build-notest" description="Build the ear, jar and war" depends="set-notask, accrual-dist">
    </target>

    <target name="deploy" depends="set-full, fix-server-xml, deploy-ear, echoTime"
            description="Build test and deploy."/>

    <target name="test-dynamic-analysis" description="Runs tests and static analysis">
        <ant inheritAll="false" inheritRefs="false" antfile="${services.build.file}" dir="${services.dir}" >
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <property name="jboss.deploy.dir" location="${jboss.deploy.dir}" />
            <property name="accrual.batch.upload.filepath.loc" value="${accrual.batch.upload.filepath.loc}"/>
            <target name="test-dynamic-analysis"/>
        </ant>
        <ant inheritAll="false" inheritRefs="false" antfile="${accrual-web.build.file}" dir="${accrual-web.dir}" >
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <property name="jboss.deploy.dir" location="${jboss.deploy.dir}" />
            <target name="test-dynamic-analysis"/>
        </ant>
    </target>
    
    <target name="run-selenium-tests" depends="build-notest" description="Runs integration tests against an already deployed application">
        <ant target="run-selenium-tests" dir="accrual-web" inheritAll="false" inheritrefs="false"/>
    </target>

    <!-- The emptySessionPath must be false to avoid Session Fixation Appscan issues and be compatible with the
        security-config.xml login-module definitions. This is duplicated in the install.xml to support BDA
        remote deployments. This definition supports the developer local deployments.
    -->
    <target name="find-server-xml">
        <available file="${jboss.deploy.dir}/jbossweb-tomcat55.sar/server.xml" property="server-xml.present"/>
    </target>
    <target name="fix-server-xml" depends="find-server-xml" if="server-xml.present">
        <copy file="${jboss.deploy.dir}/jbossweb-tomcat55.sar/server.xml" todir="${target.dir}" overwrite="true"/>
        <copy file="${target.dir}/server.xml" todir="${jboss.deploy.dir}/jbossweb-tomcat55.sar" overwrite="true">
            <filterchain>
                <tokenfilter>
                    <replacestring from="emptySessionPath=&quot;true&quot;" to="emptySessionPath=&quot;false&quot;"/>
                </tokenfilter>
            </filterchain>
        </copy>
    </target>

    <target name="deploy-notest" depends="set-notask, fix-server-xml, deploy-ear, echoTime"
            description="Build and deploy without testing or getting dependencies.">
    </target>

    <!-- ====================================================================== -->
    <!-- Ivy targets                                                            -->
    <!-- ====================================================================== -->

    <target name="ivy-init">
        <mkdir dir="${local.repo.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <copy todir="${lib.dir}" overwrite="false">
          <fileset dir="${common.dir}/bda-download">
            <include name="*.jar"/>
          </fileset>
        </copy>
    </target>

    <target name="ivy-get" depends="ivy-init">
        <ant target="ivy-get" dir="${accrual-web.dir}"/>
        <ant target="ivy-get" dir="${services.dir}"/>
        <ant target="ivy-get" dir="${ear.dir}"/>
    </target>

    <target name="ivy-clean" description="Delete jars.">
        <ant target="ivy-clean" dir="${accrual-web.dir}"/>
        <ant target="ivy-clean" dir="${services.dir}"/>
        <ant target="ivy-clean" dir="${ear.dir}"/>
    </target>


    <!-- ====================================================================== -->
    <!-- Copies JSP to the tmp folder                                           -->
    <!-- ====================================================================== -->

    <target name="copy-jsp"  description="Copies the jsp's over to the unpacked war directory in jboss">
        <ant target="copy-jsp" dir="${accrual-web.dir}"/>
    </target>

    <!-- ====================================================================== -->
    <!-- Build the jar, war and ear                                             -->
    <!-- ====================================================================== -->

    <target name="accrual-services-jar">
        <fail unless="hibernate.dialect" message="Missing required property hibernate.dialect"/>
        <ant inheritAll="false" inheritRefs="false" antfile="${services.build.file}"
            dir="${services.dir}" >
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <property name="jboss.deploy.dir" location="${jboss.deploy.dir}" />
            <property name="po.server.name" value="${po.server.name}" />
            <property name="po.port.number" value="${po.port.number}" />
            <property name="po.username" value="${po.username}" />
            <property name="po.pass" value="${po.pass}" />
            <property name="jboss.server.hostname" value="${jboss.server.hostname}" />
            <property name="accrual.jnp.url" value="${accrual.jnp.url}" />
            <property name="pa.jnp.url" value="${pa.jnp.url}" />
            <property name="po.jnp.url" value="${po.jnp.url}" />

            <target name="${services.build.target}${notask}"/>
        </ant>
    </target>

    <target name="accrual-accweb-war" depends="accrual-services-jar">
        <ant inheritAll="false" inheritRefs="false" antfile="${accrual-web.build.file}"
            dir="${accrual-web.dir}" >
            <property name="application.url" value="${application.url}" />
            <property name="jboss.deploy.dir" location="${jboss.deploy.dir}" />
            <property name="jboss.server.jndi.port" value="${jboss.server.jndi.port}"/>
            <target name="${accrual-web.build.target}${notask}"/>
        </ant>
    </target>

    <target name="accrual-ear-ear" depends="accrual-accweb-war">
        <fail unless="database.user" message="Missing required property database.user"/>
        <fail unless="database.password" message="Missing required property database.password"/>
        <fail unless="database.url" message="Missing required property database.url"/>
        <fail unless="jdbc.driver" message="Missing required property jdbc.driver"/>
        <fail unless="gridServicePrincipal" message="Missing required property gridServicePrincipal"/>
        <fail unless="gridServiceCredential" message="Missing required property gridServiceCredential"/>

        <ant inheritAll="false" inheritRefs="false" antfile="${ear.build.file}" dir="${ear.dir}" >
            <property name="jdbc.driver" value="${jdbc.driver}" />
            <property name="csm.jdbc.url" value="${database.url}" />
            <property name="csm.db.username" value="${database.user}"/>
            <property name="csm.db.password" value="${database.password}"/>
            <property name="accrual.jdbc.url" value="${database.url}" />
            <property name="accrual.db.username" value="${database.user}"/>
            <property name="accrual.db.password" value="${database.password}"/>
            <property name="gridServicePrincipal" value="${gridServicePrincipal}"/>
            <property name="gridServiceCredential" value="${gridServiceCredential}"/>
            
            <target name="${ear.build.target}"/>
        </ant>
    </target>

    <!-- ====================================================================== -->
    <!-- Clean the ear, services and web subprojects                            -->
    <!-- ====================================================================== -->

    <target name="accrual-web-clean">
            <ant inheritAll="false" inheritRefs="false" antfile="${accrual-web.build.file}"
                dir="${accrual-web.dir}" >
                <target name="${accrual-web.clean.target}"/>
            </ant>
        </target>

    <target name="accrual-services-clean">
        <ant inheritAll="false" inheritRefs="false" antfile="${services.build.file}"
            dir="${services.dir}" >
            <target name="${services.clean.target}"/>
        </ant>
    </target>

    <target name="accrual-ear-clean">
        <ant inheritAll="false" inheritRefs="false" antfile="${ear.build.file}"
            dir="${ear.dir}" >
            <target name="${ear.clean.target}"/>
        </ant>
    </target>

    <target name="clean" description="Clean the ear, jar and war" depends="accrual-web-clean, accrual-services-clean, accrual-ear-clean">
    </target>
    
    <!-- Maven management targets -->
    <target name="maven:install" depends="clean">
        <ant target="maven:install" dir="services" inheritall="false">
            <property name="accrual.version" value="${accrual.version}"/>
        </ant>
     </target>
    <target name="maven:deploy" depends="clean">
        <ant target="maven:deploy" dir="services" inheritall="false">
            <property name="accrual.version" value="${accrual.version}"/>
        </ant>
    </target>
    <!-- ====================================================================== -->
    <!-- Generate Javadoc                                                       -->
    <!-- ====================================================================== -->
    <target name="generate-javadoc" description="Generate Javadoc">
		<delete dir="javadoc"/>
        <mkdir dir="javadoc"/>
        
        <ant target="generate-javadoc" dir="accrual-web" inheritAll="false"/>
        <copy todir="javadoc/accrual-web">
            <fileset dir="accrual-web/javadoc" />
        </copy>
        
        <ant target="generate-javadoc" dir="services" inheritAll="false"/>
        <copy todir="javadoc/services">
            <fileset dir="services/javadoc" />
        </copy>
        
        <zip destfile="javadoc/accrual-javadoc.zip">
            <fileset dir="javadoc"/>
        </zip>
    </target> 

</project>
