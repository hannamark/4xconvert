<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ear ant script for Accrual                                             -->
<!-- ====================================================================== -->

<project name="accrual.ear" default="ear" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <property file="${basedir}/../build.properties"/>
    <property name="software.dir" value="${basedir}/../.."/>
    <property name="resource.dir" value="${basedir}/../resources"/>

    <property name="ear.resource.dir" value="${software.dir}/accrual/ear/src/resources"/>
    <property name="ear.build.dir" value="${software.dir}/accrual/ear/target"/>
    <property name="ear.build.finalName" value="accrual"/>
    <property name="services.package" value="${software.dir}/accrual/services/target/accrual-services.jar"/>
    <property name="web.package" value="${software.dir}/accrual/web/target/accrual.war"/>

    <property name="lib.dir" value="${software.dir}/target/accrual/lib"/>
    <property name="common.dir" value="${resource.dir}"/>
    <property name="ivy.file" value="ivy-2.0.0-beta2.jar" />
    <property name="ivy-cacore.file" value="ivy-cacore-2.0.0-beta2.jar" />
    <property name="ivy.settings.file" location="${common.dir}/ivysettings.xml" />
    <property name="ivy.def.file" location="ivy-accrual-ear.xml" />
    <property name="local.repo.dir" location="${software.dir}/local-ivy-repo" />


    <!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->

    <path id="ivy.classpath">
        <fileset dir="${lib.dir}">
            <include name="${ivy.file}" />
            <include name="${ivy-core.file}" />
        </fileset>
    </path>


    <!-- ====================================================================== -->
    <!-- Task definitions                                                       -->
    <!-- ====================================================================== -->

    <mkdir dir="${lib.dir}"/>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath"/>


    <!-- ====================================================================== -->
    <!-- Cleaning up target                                                     -->
    <!-- ====================================================================== -->

    <target name="pre-clean" description="Clean the output directory">
        <delete dir="${ear.build.dir}"/>
    </target>


    <!-- ====================================================================== -->
    <!-- Package targets                                                        -->
    <!-- ====================================================================== -->

    <target name="package-setup" depends="pre-clean">
        <available file="${services.package}" property="services.present"/>
        <fail unless="services.present" message="EJB jar file not found."/>
        <available file="${web.package}" property="web.present"/>
        <fail unless="web.present" message="War file not found."/>
        <mkdir dir="${ear.build.dir}/${ear.build.finalName}"/>
    </target>

    <target name="ear" depends="ivy-get, package-setup" description="Makes an EAR archive.">
        <copy file="${services.package}" 
             todir="${ear.build.dir}/${ear.build.finalName}"/>
        <copy file="${web.package}" 
             todir="${ear.build.dir}/${ear.build.finalName}"/>
        <copy todir="${ear.build.dir}/${ear.build.finalName}">
            <fileset dir="${lib.dir}/ear/runtime"/>
        </copy>
        <copy todir="${ear.build.dir}/${ear.build.finalName}">
            <filterset>
                <filter token="jdbc.driver" value="${jdbc.driver}"/>
                <filter token="csm.jdbc.url" value="${csm.jdbc.url}"/>
                <filter token="csm.db.username" value="${csm.db.username}"/>
                <filter token="csm.db.password" value="${csm.db.password}"/>
                <filter token="accrual.jdbc.url" value="${accrual.jdbc.url}"/>
                <filter token="accrual.db.username" value="${accrual.db.username}"/>
                <filter token="accrual.db.password" value="${accrual.db.password}"/>
            </filterset>
            <fileset dir="${ear.resource.dir}" 
                     includes="**/*" 
                     excludes="**/application.xml"/>
        </copy>
        <ear destfile="${ear.build.dir}/${ear.build.finalName}.ear" 
             basedir="${ear.build.dir}/${ear.build.finalName}" 
             compress="false" 
             appxml="${ear.resource.dir}/META-INF/application.xml"/>

        <!-- other jboss files to target folder -->
        <copy todir="${ear.build.dir}/container.lib" overwrite="true">
            <fileset dir="${lib.dir}/ear/container"/>
        </copy>
    </target>


    <!-- ====================================================================== -->
    <!-- Ivy Targets                                                            -->
    <!-- ====================================================================== -->

    <target name="init:ivy">
        <mkdir dir="${lib.dir}/ear"/>
        <property name="ivy.dep.file" value="${ivy.def.file}"/>
        <ivy:settings file="${ivy.settings.file}" />
    </target>

    <target name="ivy-runtime" depends="init:ivy">
        <ivy:resolve refresh="true" conf="runtime" />
        <ivy:retrieve pattern="${lib.dir}/ear/[conf]/[artifact]-[revision].[ext]" conf="runtime" />
    </target>

    <target name="ivy-container" depends="init:ivy">
        <ivy:resolve refresh="true" conf="container" />
        <ivy:retrieve pattern="${lib.dir}/ear/[conf]/[artifact]-[revision].[ext]" conf="container" />
    </target>

    <target name="ivy-get" 
            depends="ivy-runtime, ivy-container" 
            description="Updates the local ivy repository">
    </target>

    <target name="ivy-clean" description="Delete jars.">
        <delete dir="${lib.dir}/ear"/>
    </target>

</project>
