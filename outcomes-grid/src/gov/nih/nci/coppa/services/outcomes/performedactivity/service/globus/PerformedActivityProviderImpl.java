package gov.nih.nci.coppa.services.outcomes.performedactivity.service.globus;

import gov.nih.nci.coppa.services.outcomes.performedactivity.service.PerformedActivityImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the OutcomesServicesImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class PerformedActivityProviderImpl{
	
	PerformedActivityImpl impl;
	
	public PerformedActivityProviderImpl() throws RemoteException {
		impl = new PerformedActivityImpl();
	}
	

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetResponse get(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetResponse();
    boxedResult.setPerformedActivity(impl.get(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreateResponse create(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreateRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreateResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreateResponse();
    boxedResult.setPerformedActivity(impl.create(params.getPerformedActivity().getPerformedActivity()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdateResponse update(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdateRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdateResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdateResponse();
    boxedResult.setPerformedActivity(impl.update(params.getPerformedActivity().getPerformedActivity()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.DeleteResponse delete(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.DeleteRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.DeleteResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.DeleteResponse();
    impl.delete(params.getId().getId());
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudyProtocolResponse getByStudyProtocol(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudyProtocolRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudyProtocolResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudyProtocolResponse();
    boxedResult.setPerformedActivity(impl.getByStudyProtocol(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudySubjectResponse getByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetByStudySubjectResponse();
    boxedResult.setPerformedActivity(impl.getByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationByStudySubjectResponse getPerformedObservationByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationByStudySubjectResponse();
    boxedResult.setPerformedObservation(impl.getPerformedObservationByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneByStudySubjectResponse getPerformedSubjectMilestoneByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneByStudySubjectResponse();
    boxedResult.setPerformedSubjectMilestone(impl.getPerformedSubjectMilestoneByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneResponse getPerformedSubjectMilestone(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubjectMilestoneResponse();
    boxedResult.setPerformedSubjectMilestone(impl.getPerformedSubjectMilestone(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubjectMilestoneResponse createPerformedSubjectMilestone(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubjectMilestoneRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubjectMilestoneResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubjectMilestoneResponse();
    boxedResult.setPerformedSubjectMilestone(impl.createPerformedSubjectMilestone(params.getPerformedSubjectMilestone().getPerformedSubjectMilestone()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubjectMilestoneResponse updatePerformedSubjectMilestone(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubjectMilestoneRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubjectMilestoneResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubjectMilestoneResponse();
    boxedResult.setPerformedSubjectMilestone(impl.updatePerformedSubjectMilestone(params.getPerformedSubjectMilestone().getPerformedSubjectMilestone()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationResponse getPerformedObservation(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedObservationResponse();
    boxedResult.setPerformedObservation(impl.getPerformedObservation(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedObservationResponse createPerformedObservation(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedObservationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedObservationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedObservationResponse();
    boxedResult.setPerformedObservation(impl.createPerformedObservation(params.getPerformedObservation().getPerformedObservation()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedObservationResponse updatePerformedObservation(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedObservationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedObservationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedObservationResponse();
    boxedResult.setPerformedObservation(impl.updatePerformedObservation(params.getPerformedObservation().getPerformedObservation()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingByStudySubjectResponse getPerformedImagingByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingByStudySubjectResponse();
    boxedResult.setPerformedImaging(impl.getPerformedImagingByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingResponse getPerformedImaging(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedImagingResponse();
    boxedResult.setPerformedImaging(impl.getPerformedImaging(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedImagingResponse createPerformedImaging(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedImagingRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedImagingResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedImagingResponse();
    boxedResult.setPerformedImaging(impl.createPerformedImaging(params.getPerformedImaging().getPerformedImaging()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedImagingResponse updatePerformedImaging(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedImagingRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedImagingResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedImagingResponse();
    boxedResult.setPerformedImaging(impl.updatePerformedImaging(params.getPerformedImaging().getPerformedImaging()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureByStudySubjectResponse getPerformedProcedureByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureByStudySubjectResponse();
    boxedResult.setPerformedProcedure(impl.getPerformedProcedureByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureResponse getPerformedProcedure(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedProcedureResponse();
    boxedResult.setPerformedProcedure(impl.getPerformedProcedure(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedProcedureResponse createPerformedProcedure(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedProcedureRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedProcedureResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedProcedureResponse();
    boxedResult.setPerformedProcedure(impl.createPerformedProcedure(params.getPerformedProcedure().getPerformedProcedure()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedProcedureResponse updatePerformedProcedure(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedProcedureRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedProcedureResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedProcedureResponse();
    boxedResult.setPerformedProcedure(impl.updatePerformedProcedure(params.getPerformedProcedure().getPerformedProcedure()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationByStudySubjectResponse getPerformedSubstanceAdministrationByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationByStudySubjectResponse();
    boxedResult.setPerformedSubstanceAdministration(impl.getPerformedSubstanceAdministrationByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationResponse getPerformedSubstanceAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedSubstanceAdministrationResponse();
    boxedResult.setPerformedSubstanceAdministration(impl.getPerformedSubstanceAdministration(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubstanceAdministrationResponse createPerformedSubstanceAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubstanceAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubstanceAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedSubstanceAdministrationResponse();
    boxedResult.setPerformedSubstanceAdministration(impl.createPerformedSubstanceAdministration(params.getPerformedSubstanceAdministration().getPerformedSubstanceAdministration()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubstanceAdministrationResponse updatePerformedSubstanceAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubstanceAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubstanceAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedSubstanceAdministrationResponse();
    boxedResult.setPerformedSubstanceAdministration(impl.updatePerformedSubstanceAdministration(params.getPerformedSubstanceAdministration().getPerformedSubstanceAdministration()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationByStudySubjectResponse getPerformedRadiationAdministrationByStudySubject(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationByStudySubjectRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationByStudySubjectResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationByStudySubjectResponse();
    boxedResult.setPerformedRadiationAdministration(impl.getPerformedRadiationAdministrationByStudySubject(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationResponse getPerformedRadiationAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.GetPerformedRadiationAdministrationResponse();
    boxedResult.setPerformedRadiationAdministration(impl.getPerformedRadiationAdministration(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedRadiationAdministrationResponse createPerformedRadiationAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedRadiationAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedRadiationAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.CreatePerformedRadiationAdministrationResponse();
    boxedResult.setPerformedRadiationAdministration(impl.createPerformedRadiationAdministration(params.getPerformedRadiationAdministration().getPerformedRadiationAdministration()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedRadiationAdministrationResponse updatePerformedRadiationAdministration(gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedRadiationAdministrationRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedRadiationAdministrationResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedactivity.stubs.UpdatePerformedRadiationAdministrationResponse();
    boxedResult.setPerformedRadiationAdministration(impl.updatePerformedRadiationAdministration(params.getPerformedRadiationAdministration().getPerformedRadiationAdministration()));
    return boxedResult;
  }

}
