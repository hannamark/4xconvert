package gov.nih.nci.coppa.services.outcomes.performedobservationresult.service.globus;

import gov.nih.nci.coppa.services.outcomes.performedobservationresult.service.PerformedObservationResultImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the OutcomesServicesImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class PerformedObservationResultProviderImpl{
	
	PerformedObservationResultImpl impl;
	
	public PerformedObservationResultProviderImpl() throws RemoteException {
		impl = new PerformedObservationResultImpl();
	}
	

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetResponse get(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetResponse();
    boxedResult.setPerformedObservationResult(impl.get(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreateResponse create(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreateRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreateResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreateResponse();
    boxedResult.setPerformedObservationResult(impl.create(params.getPerformedObservationResult().getPerformedObservationResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdateResponse update(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdateRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdateResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdateResponse();
    boxedResult.setPerformedObservationResult(impl.update(params.getPerformedObservationResult().getPerformedObservationResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.DeleteResponse delete(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.DeleteRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.DeleteResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.DeleteResponse();
    impl.delete(params.getId().getId());
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedObservationResultByPerformedActivityResponse getPerformedObservationResultByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedObservationResultByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedObservationResultByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedObservationResultByPerformedActivityResponse();
    boxedResult.setPerformedObservationResult(impl.getPerformedObservationResultByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyByPerformedActivityResponse getPerformedHistopathologyByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyByPerformedActivityResponse();
    boxedResult.setPerformedHistopathology(impl.getPerformedHistopathologyByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyResponse getPerformedHistopathology(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedHistopathologyResponse();
    boxedResult.setPerformedHistopathology(impl.getPerformedHistopathology(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedHistopathologyResponse createPerformedHistopathology(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedHistopathologyRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedHistopathologyResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedHistopathologyResponse();
    boxedResult.setPerformedHistopathology(impl.createPerformedHistopathology(params.getPerformedHistopathology().getPerformedHistopathology()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedHistopathologyResponse updatePerformedHistopathology(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedHistopathologyRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedHistopathologyResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedHistopathologyResponse();
    boxedResult.setPerformedHistopathology(impl.updatePerformedHistopathology(params.getPerformedHistopathology().getPerformedHistopathology()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisByPerformedActivityResponse getPerformedDiagnosisByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisByPerformedActivityResponse();
    boxedResult.setPerformedDiagnosis(impl.getPerformedDiagnosisByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisResponse getPerformedDiagnosis(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedDiagnosisResponse();
    boxedResult.setPerformedDiagnosis(impl.getPerformedDiagnosis(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedDiagnosisResponse createPerformedDiagnosis(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedDiagnosisRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedDiagnosisResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedDiagnosisResponse();
    boxedResult.setPerformedDiagnosis(impl.createPerformedDiagnosis(params.getPerformedDiagnosis().getPerformedDiagnosis()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedDiagnosisResponse updatePerformedDiagnosis(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedDiagnosisRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedDiagnosisResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedDiagnosisResponse();
    boxedResult.setPerformedDiagnosis(impl.updatePerformedDiagnosis(params.getPerformedDiagnosis().getPerformedDiagnosis()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageByPerformedActivityResponse getPerformedImageByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageByPerformedActivityResponse();
    boxedResult.setPerformedImage(impl.getPerformedImageByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageResponse getPerformedImage(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedImageResponse();
    boxedResult.setPerformedImage(impl.getPerformedImage(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedImageResponse createPerformedImage(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedImageRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedImageResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedImageResponse();
    boxedResult.setPerformedImage(impl.createPerformedImage(params.getPerformedImage().getPerformedImage()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedImageResponse updatePerformedImage(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedImageRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedImageResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedImageResponse();
    boxedResult.setPerformedImage(impl.updatePerformedImage(params.getPerformedImage().getPerformedImage()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultByPerformedActivityResponse getPerformedClinicalResultByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultByPerformedActivityResponse();
    boxedResult.setPerformedClinicalResult(impl.getPerformedClinicalResultByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultResponse getPerformedClinicalResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedClinicalResultResponse();
    boxedResult.setPerformedClinicalResult(impl.getPerformedClinicalResult(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedClinicalResultResponse createPerformedClinicalResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedClinicalResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedClinicalResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedClinicalResultResponse();
    boxedResult.setPerformedClinicalResult(impl.createPerformedClinicalResult(params.getPerformedClinicalResult().getPerformedClinicalResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedClinicalResultResponse updatePerformedClinicalResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedClinicalResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedClinicalResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedClinicalResultResponse();
    boxedResult.setPerformedClinicalResult(impl.updatePerformedClinicalResult(params.getPerformedClinicalResult().getPerformedClinicalResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultByPerformedActivityResponse getPerformedMedicalHistoryResultByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultByPerformedActivityResponse();
    boxedResult.setPerformedMedicalHistoryResult(impl.getPerformedMedicalHistoryResultByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultResponse getPerformedMedicalHistoryResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedMedicalHistoryResultResponse();
    boxedResult.setPerformedMedicalHistoryResult(impl.getPerformedMedicalHistoryResult(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedMedicalHistoryResultResponse createPerformedMedicalHistoryResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedMedicalHistoryResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedMedicalHistoryResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedMedicalHistoryResultResponse();
    boxedResult.setPerformedMedicalHistoryResult(impl.createPerformedMedicalHistoryResult(params.getPerformedMedicalHistoryResult().getPerformedMedicalHistoryResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedMedicalHistoryResultResponse updatePerformedMedicalHistoryResult(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedMedicalHistoryResultRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedMedicalHistoryResultResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedMedicalHistoryResultResponse();
    boxedResult.setPerformedMedicalHistoryResult(impl.updatePerformedMedicalHistoryResult(params.getPerformedMedicalHistoryResult().getPerformedMedicalHistoryResult()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionByPerformedActivityResponse getPerformedLesionDescriptionByPerformedActivity(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionByPerformedActivityRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionByPerformedActivityResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionByPerformedActivityResponse();
    boxedResult.setPerformedLesionDescription(impl.getPerformedLesionDescriptionByPerformedActivity(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionResponse getPerformedLesionDescription(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.GetPerformedLesionDescriptionResponse();
    boxedResult.setPerformedLesionDescription(impl.getPerformedLesionDescription(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedLesionDescriptionResponse createPerformedLesionDescription(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedLesionDescriptionRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedLesionDescriptionResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.CreatePerformedLesionDescriptionResponse();
    boxedResult.setPerformedLesionDescription(impl.createPerformedLesionDescription(params.getPerformedLesionDescription().getPerformedLesionDescription()));
    return boxedResult;
  }

    public gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedLesionDescriptionResponse updatePerformedLesionDescription(gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedLesionDescriptionRequest params) throws RemoteException {
    gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedLesionDescriptionResponse boxedResult = new gov.nih.nci.coppa.services.outcomes.performedobservationresult.stubs.UpdatePerformedLesionDescriptionResponse();
    boxedResult.setPerformedLesionDescription(impl.updatePerformedLesionDescription(params.getPerformedLesionDescription().getPerformedLesionDescription()));
    return boxedResult;
  }

}
