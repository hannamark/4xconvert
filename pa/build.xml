<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->

<project name="pa" default="package" basedir=".">
	  <property file="maven-build.properties"/>

	  <property name="coppa.pa.build.finalName" value="pa"/>
	  <property name="coppa.pa.build.dir" value="target"/>
	  <property name="coppa.pa.build.outputDir" value="${coppa.pa.build.dir}/classes"/>
	  <property name="coppa.pa.build.srcDir.0" value="src/main/java"/>
	  <property name="coppa.pa.build.resourceDir.0" value="src/main/resources"/>
	  <property name="coppa.pa.build.testOutputDir" value="${coppa.pa.build.dir}/test-classes"/>
	  <property name="coppa.pa.build.testDir.0" value="src/test/java"/>
	  <property name="coppa.pa.build.testResourceDir.0" value="src/main/resources"/>
	  <property name="coppa.pa.test.reports" value="${coppa.pa.build.dir}/test-reports"/>
	  <property name="coppa.pa.reporting.outputDirectory" value="${coppa.pa.build.dir}/site"/>

	  <property name="coppa.pa.repo.local" value="C:\Documents and Settings\Hugh\.m2\repository"/>
	  <property name="coppa.pa.settings.offline" value="false"/>
	  <property name="coppa.pa.settings.interactiveMode" value="true"/>

	  <!-- ====================================================================== -->
	  <!-- Defining classpaths                                                    -->
	  <!-- ====================================================================== -->

	  <path id="build.classpath">
	    <fileset dir="${basedir}/lib">
	      <include name="*/**"/>
	    </fileset>
	  </path>
	  <path id="build.test.classpath">
	    <fileset dir="${basedir}/lib">
	        <include name="*/**"/>
	    </fileset>
	  </path>

	  <!-- ====================================================================== -->
	  <!-- Cleaning up target                                                     -->
	  <!-- ====================================================================== -->

	  <target name="clean" description="Clean the output directory">
	    <delete dir="${coppa.pa.build.dir}"/>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- Compilation target                                                     -->
	  <!-- ====================================================================== -->

	  <target name="compile" description="Compile the code">
	    <mkdir dir="${coppa.pa.build.outputDir}"/>
	    <javac destdir="${coppa.pa.build.outputDir}" 
	           nowarn="false" 
	           debug="true" 
	           optimize="false" 
	           deprecation="true" 
	           target="1.5" 
	           verbose="false" 
	           fork="false" 
	           source="1.5">
	      <src>
	        <pathelement location="${coppa.pa.build.srcDir.0}"/>
	      </src>
	      <classpath refid="build.classpath"/>
	    </javac>
	    <copy todir="${coppa.pa.build.outputDir}">
	      <fileset dir="${coppa.pa.build.resourceDir.0}"/>
	    </copy>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- Test-compilation target                                                -->
	  <!-- ====================================================================== -->

	  <target name="compile-tests" 
	          depends="junit-present, compile" 
	          description="Compile the test code" 
	          if="junit.present">
	    <mkdir dir="${coppa.pa.build.testOutputDir}"/>
	    <javac destdir="${coppa.pa.build.testOutputDir}" 
	           nowarn="false" 
	           debug="true" 
	           optimize="false" 
	           deprecation="true" 
	           target="1.5" 
	           verbose="false" 
	           fork="false" 
	           source="1.5">
	      <src>
	        <pathelement location="${coppa.pa.build.testDir.0}"/>
	      </src>
	      <classpath>
	        <path refid="build.test.classpath"/>
	        <pathelement location="${coppa.pa.build.outputDir}"/>
	      </classpath>
	    </javac>
	    <copy todir="${coppa.pa.build.testOutputDir}">
	      <fileset dir="${coppa.pa.build.testResourceDir.0}"/>
	    </copy>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- Run all tests                                                          -->
	  <!-- ====================================================================== -->

	  <target name="test" 
	          depends="junit-present, compile-tests" 
	          if="junit.present" 
	          description="Run the test cases">
	    <mkdir dir="${coppa.pa.test.reports}"/>
	    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
	      <sysproperty key="basedir" value="."/>
	      <formatter type="xml"/>
	      <formatter type="plain" usefile="false"/>
	      <classpath>
	        <path refid="build.test.classpath"/>
	        <pathelement location="${coppa.pa.build.outputDir}"/>
	        <pathelement location="${coppa.pa.build.testOutputDir}"/>
	      </classpath>
	      <batchtest todir="${coppa.pa.test.reports}">
	        <fileset dir="${coppa.pa.build.testDir.0}">
	          <include name="**/*Test.java"/>
	          <exclude name="**/*Abstract*Test.java"/>
	        </fileset>
	      </batchtest>
	    </junit>
	  </target>

	  <target name="test-junit-present">
	    <available classname="junit.framework.Test" property="junit.present"/>
	  </target>

	  <target name="junit-present" 
	          depends="test-junit-present" 
	          unless="junit.present">
	    <echo>=================================== WARNING ===================================</echo>
	    <echo> Junit isn&apos;t present in your $ANT_HOME/lib directory. Tests not executed. </echo>
	    <echo>===============================================================================</echo>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- Javadoc target                                                         -->
	  <!-- ====================================================================== -->

	  <target name="javadoc" description="Generates the Javadoc of the application">
	    <javadoc sourcepath="${coppa.pa.build.srcDir.0}" 
	             packagenames="*" 
	             destdir="${coppa.pa.reporting.outputDirectory}/apidocs" 
	             access="protected" 
	             old="false" 
	             verbose="false" 
	             version="true" 
	             use="true" 
	             author="true" 
	             splitindex="false" 
	             nodeprecated="false" 
	             nodeprecatedlist="false" 
	             notree="false" 
	             noindex="false" 
	             nohelp="false" 
	             nonavbar="false" 
	             serialwarn="false" 
	             charset="ISO-8859-1" 
	             linksource="false" 
	             breakiterator="false"/>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- Package target                                                         -->
	  <!-- ====================================================================== -->

	  <target name="package" depends="compile,test" description="Package the application">
	    <mkdir dir="${coppa.pa.build.dir}/${coppa.pa.build.finalName}/WEB-INF/lib"/>
	    <copy todir="${coppa.pa.build.dir}/${coppa.pa.build.finalName}/WEB-INF/lib">
	      <fileset dir="${basedir}/lib" excludes="*junit*"/>	    	
	    </copy>

	    <war destfile="${coppa.pa.build.dir}/${coppa.pa.build.finalName}.war" 
	         compress="false" 
	         webxml="${basedir}/src/main/webapp/WEB-INF/web.xml">
	      <lib dir="${coppa.pa.build.dir}/${coppa.pa.build.finalName}/WEB-INF/lib"/>
	      <classes dir="${coppa.pa.build.outputDir}"/>

	      <webinf dir="${basedir}/src/main/webapp/WEB-INF" 
	              excludes="web.xml"/>
	      <fileset dir="${basedir}/src/main/webapp"/>
	    </war>
	  </target>

	  <!-- ====================================================================== -->
	  <!-- A dummy target for the package named after the type it creates         -->
	  <!-- ====================================================================== -->

	  <target name="war" depends="package" description="Builds the war for the application"/>

	
  <!-- ====================================================================== -->
  <!-- Help target                                                            -->
  <!-- ====================================================================== -->

  <target name="help">
    <echo message="Please run: $ant -projecthelp"/>
  </target>
</project>