<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- pa-ejb ant script for COPPA PA                                         -->
<!-- ====================================================================== -->

<project name="pa-ejb" default="jar" basedir=".">
    <property file="${basedir}/../build.properties"/>
    <property name="jboss.server.jndi.port" value="1099" />
	
	<property name="pa.resourceDir" value="${basedir}/../resources"/>
    <property name="pa.pmd" value="${pa.resourceDir}/paPmd.xml"/>
    <property name="pa.checkstyle" value="${pa.resourceDir}/paCheckstyle.xml"/>

    <property name="pa-ejb.build.finalName" value="pa-ejb"/>
    <property name="pa-ejb.build.dir" value="${basedir}/target"/>
    <property name="pa-ejb.build.outputDir" value="${pa-ejb.build.dir}/classes"/>
    <property name="pa-ejb.build.srcDir.0" value="${basedir}/src/java"/>
    <property name="pa-ejb.build.resourceDir.0" value="${basedir}/src/resources"/>
    <property name="pa-ejb.build.testOutputDir" value="${pa-ejb.build.dir}/test-classes"/>
    <property name="pa-ejb.build.testDir.0" value="${basedir}/test/java"/>
    <property name="pa-ejb.build.testResourceDir.0" value="${basedir}/test/resources"/>
    <property name="pa-ejb.test.reports" value="${pa-ejb.build.dir}/test-reports"/>
    <property name="pa-ejb.coverage.reports" value="${pa-ejb.build.dir}/coverage-reports"/>
    <property name="pa-ejb.reporting.outputDirectory" value="${pa-ejb.build.dir}/site"/>
    <property name="pa-ejb.jar" value="${pa-ejb.build.finalName}.jar"/>
    <property name="pa-ejb.lib.dir" value="${basedir}/../lib"/>
    <property name="pa-ejb.lib.test.dir" value="${pa-ejb.lib.dir}/test"/>
    <property name="pa-ejb.lib.main.dir" value="${pa-ejb.lib.dir}/main"/>
    <property name="cobertura.lib.dir" value="${pa-ejb.lib.test.dir}/cobertura"/>
    <property name="pa-ejb.build.coberturaOutputDir" value="${pa-ejb.build.dir}/generated-classes"/>

    <!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->

    <path id="build.classpath">
        <fileset dir="${pa-ejb.lib.main.dir}">
            <include name="**/*"/>
        </fileset>
	    <fileset dir="${jboss.deploy.directory}/../lib">
		    <include name="**/*"/>
	    </fileset>
	    <fileset dir="${jboss.deploy.directory}/../../../client">
			<include name="**/*"/>
	    </fileset>
    </path>
    <path id="build.test.classpath">
        <fileset dir="${pa-ejb.lib.test.dir}"/>
        <fileset dir="${pa-ejb.lib.main.dir}">
            <include name="**/*"/>
        </fileset>
        <fileset dir="${jboss.deploy.directory}/../lib">
            <include name="**/*"/>
        </fileset>
        <fileset dir="${jboss.deploy.directory}/../../../client">
            <include name="**/*"/>
        </fileset>
    </path>
    <path id="cobertura.classpath">
        <fileset dir="${cobertura.lib.dir}">
            <include name="cobertura.jar" />
            <include name="*.jar" />
        </fileset>
    </path>

    <!-- ====================================================================== -->
    <!-- Task definitions                                                       -->
    <!-- ====================================================================== -->

    <taskdef resource="checkstyletask.properties" 
             classpath="${pa-ejb.lib.test.dir}/checkstyle-all-4.4.jar"/>
    <taskdef name="pmd" 
             classpath="${pa-ejb.lib.test.dir}/pmd-4.2.2.jar"
             classname="net.sourceforge.pmd.ant.PMDTask"/>
    <taskdef resource="simiantask.properties" 
             classpath="${pa-ejb.lib.test.dir}/simian-2.2.24.jar"/>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
    
    <!-- ====================================================================== -->
    <!-- Cleaning up target                                                     -->
    <!-- ====================================================================== -->

    <target name="clean" description="Clean the output directory">
        <delete dir="${pa-ejb.build.dir}"/>
    </target>

    <!-- ====================================================================== -->
    <!-- Configure main compilation target                                                     -->
    <!-- ====================================================================== -->

    <target name="configure-main">
        <copy file="${pa.resourceDir}/jndi.properties" 
              tofile="${pa-ejb.build.resourceDir.0}/jndi.properties"
              overwrite="true">
            <filterset>
                <filter token="jboss.server.jndi.port" 
                	    value="${jboss.server.jndi.port}" />
            </filterset>
        </copy>
    </target>
    
    <!-- ====================================================================== -->
    <!-- Compilation target                                                     -->
    <!-- ====================================================================== -->

    <target name="compile" depends="configure-main" description="Compile the code">
        <mkdir dir="${pa-ejb.build.outputDir}"/>
        <javac destdir="${pa-ejb.build.outputDir}" 
               nowarn="false" 
               debug="true" 
               optimize="false" 
               deprecation="true" 
               target="1.5" 
               verbose="false" 
               fork="false" 
               source="1.5">
            <src>
                <pathelement location="${pa-ejb.build.srcDir.0}"/>
            </src>
            <classpath refid="build.classpath"/>
        </javac>
        
        <filter token="hibernate.dialect" value="${hibernate.dialect}"/>
        <filter token="db.username" value="${db.username}"/>
        <filter token="db.password" value="${db.password}"/>
        <filter token="jdbc.driver" value="${jdbc.driver}"/>
        <filter token="jdbc.url" value="${jdbc.url}"/>
        <copy todir="${pa-ejb.build.outputDir}" filtering="true">
            <fileset dir="${pa-ejb.build.resourceDir.0}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Configure test compilation target                                                     -->
    <!-- ====================================================================== -->

    <target name="configure-tests">
    	<copy file="${pa.resourceDir}/test.properties.pa-ejb" 
    	      tofile="${pa-ejb.build.testResourceDir.0}/test.properties"
    		  overwrite="true">
            <filterset>
                <filter token="test.schema.showsql" value="${test.schema.showsql}"/>
            </filterset>
    	</copy>
    </target>
    
    <!-- ====================================================================== -->
    <!-- Test-compilation target                                                -->
    <!-- ====================================================================== -->

    <target name="compile-tests" 
      depends="compile, configure-tests" 
      description="Compile the test code"> 
        <mkdir dir="${pa-ejb.build.testOutputDir}"/>
        <javac destdir="${pa-ejb.build.testOutputDir}" 
               nowarn="false" 
               debug="true" 
               optimize="false" 
               deprecation="true" 
               target="1.5" 
               verbose="false" 
               fork="false" 
               source="1.5">
            <src>
                <pathelement location="${pa-ejb.build.testDir.0}"/>
            </src>
            <classpath>
                <path refid="build.test.classpath"/>
                <pathelement location="${pa-ejb.build.outputDir}"/>
            </classpath>
        </javac>
        <copy todir="${pa-ejb.build.testOutputDir}">
            <fileset dir="${pa-ejb.build.testResourceDir.0}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Run Cobertura and JUnit                                                -->
    <!-- ====================================================================== -->

    <target name="test-cobertura" depends="compile-tests" 
            description="Run JUnit and Cobertura tests">
        
        <delete file="${pa-ejb.build.dir}/cobertura.ser" />
    	
        <cobertura-instrument datafile="${pa-ejb.build.dir}/cobertura.ser"
                              toDir="${pa-ejb.build.coberturaOutputDir}">
            <fileset dir="${pa-ejb.build.outputDir}">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>   
        
        <mkdir dir="${pa-ejb.test.reports}"/>
        <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
            <sysproperty key="basedir" value="."/>
            <sysproperty key="net.sourceforge.cobertura.datafile"
                    file="${pa-ejb.build.dir}/cobertura.ser" />
            <formatter type="xml"/>
            <formatter type="plain" usefile="false"/>
            <classpath location="${pa-ejb.build.coberturaOutputDir}"/>
            <classpath location="${pa-ejb.build.outputDir}"/>
            <classpath location="${pa-ejb.build.testOutputDir}"/>
            <classpath refid="cobertura.classpath"/>
            <classpath refid="build.test.classpath"/>
            <batchtest todir="${pa-ejb.test.reports}">
                <fileset dir="${pa-ejb.build.testDir.0}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*Abstract*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        
        <cobertura-report datafile="${pa-ejb.build.dir}/cobertura.ser"
                          destdir="${pa-ejb.coverage.reports}" 
                          srcdir="${pa-ejb.build.srcDir.0}" />

        <cobertura-report datafile="${pa-ejb.build.dir}/cobertura.ser"
                          format="xml"
                          destdir="${pa-ejb.coverage.reports}" 
                          srcdir="${pa-ejb.build.srcDir.0}" />
        
        <cobertura-check datafile="${pa-ejb.build.dir}/cobertura.ser"
                         totalbranchrate="70" 
                         totallinerate="70"
                         haltonfailure="false"/>
     </target>

    <!-- ====================================================================== -->
    <!-- Run checkstyle                                                         -->
    <!-- ====================================================================== -->

    <target name="test-checkstyle" description="Run checkstyle">
        <checkstyle config="${pa.checkstyle}" failOnViolation="true">
            <classpath>
                <path refid="build.test.classpath"/>
                <pathelement location="${pa-ejb.build.outputDir}"/>
            </classpath>
        	<fileset dir="src" includes="**/*.java" />
            <formatter type="plain"/>
            <formatter type="plain" toFile="${pa-ejb.build.dir}/checkstyle.txt"/>
        </checkstyle>
    </target>

    <!-- ====================================================================== -->
    <!-- Run PMD                                                                -->
    <!-- ====================================================================== -->

    <target name="test-pmd" description="Run PMD checks">
        <pmd shortFilenames="true" failOnRuleViolation="true" 
        	                       rulesetfiles="${pa.pmd}">
            <formatter type="text" toConsole="true"/>
            <formatter type="text" toFile="${pa-ejb.build.dir}/pmd.txt"/>
            <formatter type="xml"  toFile="${pa-ejb.build.dir}/pmd.xml"/>
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
         </pmd>
    </target>

    <!-- ====================================================================== -->
    <!-- Run Simian                                                             -->
    <!-- ====================================================================== -->

    <target name="test-simian" description="Run Simian similarity analyzer checks">
        <simian>
            <fileset dir="src" includes="**/*.java"/>
            <formatter type="plain" toFile="${pa-ejb.build.dir}/simian.txt"/>
            <formatter type="plain"/>
        </simian>
    </target>

    <!-- ====================================================================== -->
    <!-- Run all tests                                                          -->
    <!-- ====================================================================== -->

    <target name="test-all" 
            depends="test-checkstyle,test-pmd,test-cobertura,test-simian" 
            description="Run all tests"/>

    <!-- ====================================================================== -->
    <!-- Package target                                                         -->
    <!-- ====================================================================== -->
 
	<target name="jar">
        <jar jarfile="${pa-ejb.build.dir}/${pa-ejb.jar}" 
             compress="true" 
             index="false" 
             basedir="${pa-ejb.build.outputDir}"/>
    </target>

    <target name="package-notest" depends="compile, jar"/>

    <target name="package" depends="compile,test-all, jar" 
    	    description="Package the application"/>
	
    <!-- ====================================================================== -->
    <!-- Help target                                                            -->
    <!-- ====================================================================== -->

    <target name="help">
        <echo message="Please run: $ant -projecthelp"/>
    </target>
</project>
