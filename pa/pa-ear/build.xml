<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- pa-ear ant script for COPPA PA                                         -->
<!-- ====================================================================== -->

<project name="pa-ear" default="test-all" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="software.dir" value="${basedir}/../.."/>
    <property name="pa.dir" value="${software.dir}/pa"/>
    <property name="pa.report.dir" value="${software.dir}/target/pa/reports"/>
    <property file="${software.dir}/pa/build.properties"/>
    <property name="pa.resourceDir" value="${software.dir}/pa/resources"/>
    
    <property name="pa-ear.build.dir" value="${pa.dir}/pa-ear/target"/>
    <property name="pa-ear.build.outputDir" value="${pa-ear.build.dir}/classes"/>   
    <property name="pa-ear.build.testOutputDir" value="${pa-ear.build.dir}/test-classes"/>
    <property name="pa-ear.build.resourceDir.0" value="${pa.dir}/pa-ear/src/resources"/>  
    <property name="pa-ear.test.reports" value="${pa-ear.build.dir}/test-reports"/>
    <property name="pa-ear.build.testDir.0" value="${pa.dir}/pa-ear/test/java"/>
    <property name="pa-ear.build.testResourceDir.0" value="${pa.dir}/pa-ear/test/resources"/>
    <property name="pa-ear.build.finalName" value="pa"/>
    <property name="pa-ear.ear" value="${pa-ear.build.finalName}.ear"/>
    <property name="pa-ejb.output.dir" value="${pa.dir}//pa-ejb/target"/>
    <property name="pa-ejb.package" value="${pa-ejb.output.dir}/pa-ejb.jar"/>
    <property name="pa-web.output.dir" value="${pa.dir}/pa-web/target"/>
    <property name="pa-web.package" value="${pa-web.output.dir}/pa-web.war"/>   
    <property name="reg-web.output.dir" value="${software.dir}/reg-web/target"/>
    <property name="reg-web.package" value="${reg-web.output.dir}/reg-web.war"/>   
    <property name="serverName" value="default"/>
    
    <property name="lib.dir" value="${software.dir}/target/pa/lib"/>
    <property name="common.dir" value="${software.dir}/build-pa/common"/>
    <property name="ivy.file" value="ivy-2.0.0-beta2.jar" />
    <property name="ivy-cacore.file" value="ivy-cacore-2.0.0-beta2.jar" />
    <property name="ivy.settings.file" location="${common.dir}/ivysettings.xml" />
    <property name="ivy.def.file" location="ivy-pa-ear.xml" />
    <property name="local.repo.dir" location="${software.dir}/local-ivy-repo" />


    <!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->

    <property name="compile.jar.dir" location="${lib.dir}/pa-ear/compile" />
    <path id="compile.classpath">
        <fileset dir="${compile.jar.dir}"/>
    </path>

    <property name="runtime.jar.dir" location="${lib.dir}/pa-ear/runtime" />
    <property name="container.jar.dir" location="${lib.dir}/pa-ear/container" />

    <property name="test.jar.dir" location="${lib.dir}/pa-ear/test" />
    <path id="test.classpath">
        <fileset dir="${test.jar.dir}"/>
    </path>

    <property name="test-junit.jar.dir" location="${lib.dir}/pa-ear/test-junit" />
    <path id="test-junit.classpath">
        <fileset dir="${test-junit.jar.dir}"/>
    </path>

    <path id="jboss.client.classpath">       
        <fileset dir="${jboss.deploy.directory}/../../../client">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="ivy.classpath">
        <fileset dir="${lib.dir}">
            <include name="${ivy.file}" />
            <include name="${ivy-core.file}" />
        </fileset>
    </path>


    <path id="build.test.classpath">
        <fileset dir="${test.jar.dir}"/>
        <fileset dir="${test-junit.jar.dir}"/>
        <fileset dir="${compile.jar.dir}"/>
        <fileset dir="${pa-ejb.output.dir}">
            <include name="pa-ejb.jar"/>
        </fileset>
    </path>
    
    <!-- ====================================================================== -->
    <!-- Task definitions                                                       -->
    <!-- ====================================================================== -->

    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${pa.report.dir}/pa-ear"/>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath"/>

    <!-- ====================================================================== -->
    <!-- Cleaning up target                                                     -->
    <!-- ====================================================================== -->

    <target name="clean" description="Clean the output directory">
        <delete dir="${pa-ear.build.dir}"/>
        <delete dir="${pa.report.dir}/pa-ear"/>
    </target>

    <!-- ====================================================================== -->
    <!-- Compilation target                                                     -->
    <!-- ====================================================================== -->

    <target name="compile" description="Compile the code">
        <mkdir dir="${pa-ear.build.outputDir}"/>
        <copy todir="${pa-ear.build.outputDir}">
            <fileset dir="${pa-ear.build.resourceDir.0}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Configure tests target                                                     -->
    <!-- ====================================================================== -->

    <target name="configure.tests">
        <copy file="${pa.resourceDir}/test.properties.pa-ear" 
              tofile="${pa-ear.build.testResourceDir.0}/test.properties"
              overwrite="true">
            <filterset>
                <filter token="test.java.naming.provider" 
                        value="${test.java.naming.provider}"/>
            </filterset>
        </copy>
    </target>
    
    <!-- ====================================================================== -->
    <!-- Test-compilation target                                                -->
    <!-- ====================================================================== -->

    <target name="compile-tests" 
            depends="configure.tests" 
            description="Compile the test code" >
        <mkdir dir="${pa-ear.build.testOutputDir}"/>
        <javac destdir="${pa-ear.build.testOutputDir}" 
            nowarn="false" 
            debug="true" 
            optimize="false" 
            deprecation="true" 
            target="1.5" 
            verbose="false" 
            fork="false" 
            source="1.5">
            <src>
                <pathelement location="${pa-ear.build.testDir.0}"/>
            </src>
            <classpath>
                <path refid="build.test.classpath"/>
            </classpath>
        </javac>
        <copy todir="${pa-ear.build.testOutputDir}">
            <fileset dir="${pa-ear.build.testResourceDir.0}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Run JUnit Integration Tests                                            -->
    <!-- ====================================================================== -->

    <target name="test-all" depends="compile-tests" 
            description="Run JUnit integration tests">
        
        <mkdir dir="${pa-ear.test.reports}"/>
        <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
            <formatter type="xml"/>
            <formatter type="plain" usefile="false"/>             
            <classpath location="${pa-ear.build.testOutputDir}"/>   
            <classpath refid="jboss.classpath"/>  
            <classpath refid="build.test.classpath"/>
            <batchtest todir="${pa-ear.test.reports}">
                <fileset dir="${pa-ear.build.testDir.0}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*Abstract*Test.java"/> 
                </fileset>
            </batchtest>
        </junit>
     </target>

    <!-- ====================================================================== -->
    <!-- Package target                                                         -->
    <!-- ====================================================================== -->

    <target name="package" depends="ivy-get,compile" description="Package the application">
        <!-- package pa.ear -->
        <available file="${pa-ejb.package}" property="pa-ejb.present"/>
        <fail unless="pa-ejb.present" message="EJB jar file not found."/>
        <available file="${pa-web.package}" property="pa-web.present"/>
        <fail unless="pa-web.present" message="War file not found."/>
        <available file="${reg-web.package}" property="reg-web.present"/>
        <fail unless="reg-web.present" message="Protocol regestry war not found."/>
        <mkdir dir="${pa-ear.build.dir}/${pa-ear.build.finalName}"/>
        <copy file="${pa-ejb.package}" 
             todir="${pa-ear.build.dir}/${pa-ear.build.finalName}"/>
        <copy file="${pa-web.package}" 
             todir="${pa-ear.build.dir}/${pa-ear.build.finalName}"/>
        <copy file="${reg-web.package}" 
             todir="${pa-ear.build.dir}/${pa-ear.build.finalName}"/>
        <copy todir="${pa-ear.build.dir}/${pa-ear.build.finalName}">
            <filterset>
                <filter token="jdbc.driver" value="${jdbc.driver}"/>
                <filter token="jdbc.url" value="${jdbc.url}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
            </filterset>
            <fileset dir="${pa-ear.build.resourceDir.0}" 
                     includes="**/*" 
                     excludes="**/application.xml"/>
        </copy>     
        <copy todir="${pa-ear.build.dir}/${pa-ear.build.finalName}">
            <fileset dir="${runtime.jar.dir}"/>
        </copy>
        <ear destfile="${pa-ear.build.dir}/${pa-ear.build.finalName}.ear" 
             basedir="${pa-ear.build.dir}/${pa-ear.build.finalName}" 
             compress="false" 
             appxml="${pa-ear.build.dir}/classes/META-INF/application.xml"/>

        <!-- deploy pa-ds.xml -->
        <copy todir="${jboss.deploy.directory}" overwrite="true">
            <filterset>
                <filter token="jdbc.driver" value="${jdbc.driver}"/>
                <filter token="jdbc.url" value="${jdbc.url}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
            </filterset>
            <fileset dir="${pa.resourceDir}" includes="pa-ds.xml"/>
        </copy>  
        
        <!-- deploy jars to server lib -->
        <copy todir="${jboss.deploy.directory}/../lib" overwrite="true">
            <fileset dir="${container.jar.dir}"/>
        </copy>  

        <!-- generate login-config application-policies -->
        <copy todir="${pa-ear.build.dir}" overwrite="true">
            <filterset>
                <filter token="jdbc.driver" value="${jdbc.driver}"/>
                <filter token="jdbc.url" value="${jdbc.url}"/>
                <filter token="db.username" value="${db.username}"/>
                <filter token="db.password" value="${db.password}"/>
            </filterset>
            <fileset dir="${pa.resourceDir}" includes="login-config.upt"/>
            <fileset dir="${pa.resourceDir}" includes="login-config.pa"/>
        </copy>     
    </target>
    
    <!-- ====================================================================== -->
    <!-- Deploy locally                                                         -->
    <!-- ====================================================================== -->
    
    <target name="deploy" description="Deploys the ear for the application">
        <available file="${pa-ear.build.dir}/${pa-ear.ear}" property="pa-ear.ear.present"/>
        <fail unless="pa-ear.ear.present" message="Ear file not found."/>
        <copy todir="${jboss.deploy.directory}" file="${pa-ear.build.dir}/${pa-ear.ear}"/>
    </target>

    <!-- ====================================================================== -->
    <!-- called only for selenium tests                                         -->
    <!-- ====================================================================== -->

    <target name="start_jboss" depends="package, deploy, configure.tests" 
            description="starts the jboss to run selenium test">
        <jboss-start-jboss jboss.home="${jboss.deploy.directory}/../../../" jboss.server.name="${serverName}"/>
    </target>
    
    <!-- 
    jboss-start-jboss macro will start the jboss instance
    usage: <jboss-start-jboss jboss.home="${jboss.home}"/>
                jboss.home is the location where Jboss is installed                       
    -->
    <macrodef name="jboss-start-jboss" description="Starts a local JBoss instance">     
         <attribute name="jboss.home" default="${jboss.home}" />
         <attribute name="jboss.server.name" default="${jboss.server.name}" />
              <sequential>
                     <available file="@{jboss.home}/bin" property="jboss.bin.exists"/>                          
                         <if>
                             <isset property="jboss.bin.exists"/>
                                <then>
                                    <echo message="Starting JBoss instance at @{jboss.home} and @{jboss.server.name} with start_jboss" />
                                    <exec os="Windows XP, Windows 2000, Windows 2003" executable="cmd" dir="@{jboss.home}/bin" spawn="true" >
                                           <env key="NOPAUSE" value="true" />
                                           <arg line="/c run.bat" />                                           
                                    </exec>
                                </then>
                              <else>
                                    <echo message="Starting JBoss instance at @{jboss.home} with run.sh" />
                                    <exec os="Linux" executable="chmod" spawn="true">
                                           <arg value="+x" />
                                           <arg file="@{jboss.home}/bin/run.sh" />
                                           <arg file="@{jboss.home}/bin/shutdown.sh" />
                                    </exec>                
                                    <exec executable="sh" os="Linux" dir="@{jboss.home}/bin" spawn="true">
                                           <env key="NOPAUSE" value="true" />
                                           <arg line="run.sh" />
                                    </exec>
                                    <exec os="Windows_NT, Windows 2000, Windows 2003" executable="cmd" dir="@{jboss.home}/bin" spawn="true" >
                                           <env key="NOPAUSE" value="true" />
                                           <arg line="/c run.bat" />                                           
                                    </exec>
                                    <sleep seconds="15" />
                              </else>
                         </if>
                <ant target="waitfor-jboss"/>
                <ant target="start-selenium-server"/>
                <ant target="test-selenium-class" dir="../pa-web"/>
                <ant target="stop-jboss"/>
                </sequential>
    </macrodef>
    <!-- ====================================================================== -->
    <!-- A target to build and deploy the package                               -->
    <!-- ====================================================================== -->

    <target name="ear" depends="package,deploy" description="Builds and deploys the ear"/>

    <!-- ====================================================================== -->
    <!-- Start the selenium server                                              -->
    <!-- ====================================================================== -->
  
    <target name="start-selenium-server">
        <java jar="${pa-ear.lib.dir}/main/selenium-server-1.0-beta-1-standalone.jar" fork="true" spawn="true">
            <arg line="-timeout 30"/>
            <jvmarg value="-Dhttp.proxyHost=proxy.corporate.com"/>
            <jvmarg value="-Dhttp.proxyPort=3128"/>
        </java>
    </target>

    <!-- ====================================================================== -->
    <!-- Wait for jboss to start                                                -->
    <!-- ====================================================================== -->
    
    <target name="waitfor-jboss">
        <echo>JBOSS startup please wait..............................</echo>
        <waitfor maxwait="120" maxwaitunit="second" checkevery="20" checkeveryunit="second">
            <http url="http://localhost:${jboss.port}/pa"/>
        </waitfor>
    </target>
    
    <!-- ====================================================================== -->
    <!-- Stop the jboss server                                                  -->
    <!-- ====================================================================== -->
    
    <target name="stop-jboss" description="Stop the JBoss server">       
        <exec dir="${jboss.deploy.directory}/../../../bin" executable="cmd.exe" os="Windows XP, Windows_NT">
            <arg line="/c shutdown.bat -S"/>
            <env key="NOPAUSE" value="true"/>
        </exec>
    </target>

    <!-- ====================================================================== -->
    <!-- Ivy Targets                                                            -->
    <!-- ====================================================================== -->
    <target name="init:ivy">
        <mkdir dir="${local.repo.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <property name="ivy.dep.file" value="${ivy.def.file}"/>
        <ivy:settings file="${ivy.settings.file}" />
    </target>
    <target name="ivy-test-junit" depends="init:ivy">
        <ivy:resolve refresh="true" conf="test-junit" />
        <ivy:retrieve pattern="${lib.dir}/pa-ear/[conf]/[artifact]-[revision].[ext]" conf="test-junit" />
    </target>
    <target name="ivy-compile" depends="init:ivy">
        <ivy:resolve refresh="true" conf="compile" />
        <ivy:retrieve pattern="${lib.dir}/pa-ear/[conf]/[artifact]-[revision].[ext]" conf="compile" />
    </target>
    <target name="ivy-test" 
            depends="init:ivy,ivy-test-junit">
            <ivy:resolve refresh="true" conf="test" />
            <ivy:retrieve pattern="${lib.dir}/pa-ear/[conf]/[artifact]-[revision].[ext]" conf="test" />
    </target>
    <target name="ivy-runtime" depends="init:ivy">
        <ivy:resolve refresh="true" conf="runtime" />
        <ivy:retrieve pattern="${lib.dir}/pa-ear/[conf]/[artifact]-[revision].[ext]" conf="runtime" />
        
        <!-- copy a runtime library, not worthy of putting in ivy -->
        <copy file="${pa.dir}/lib-temp/xsnapshot-1.1-beta2.jar" 
              todir="${lib.dir}/pa-ear/runtime" overwrite="true" />
        
    </target>
    <target name="ivy-container" depends="init:ivy">
        <ivy:resolve refresh="true" conf="container" />
        <ivy:retrieve pattern="${lib.dir}/pa-ear/[conf]/[artifact]-[revision].[ext]" conf="container" />
    </target>
    <target name="ivy-get" 
            depends="init:ivy,ivy-runtime,ivy-container" 
            description="Updates the local ivy repository">
    </target>
    <target name="ivy-clean" description="Delete jars.">
        <delete dir="${lib.dir}/pa-ear"/>
    </target>

    
</project>
