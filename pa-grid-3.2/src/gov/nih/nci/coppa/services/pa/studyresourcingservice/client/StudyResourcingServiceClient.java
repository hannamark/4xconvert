package gov.nih.nci.coppa.services.pa.studyresourcingservice.client;

import gov.nih.nci.coppa.services.pa.StudyResourcing;
import gov.nih.nci.coppa.services.pa.faults.PAFault;
import gov.nih.nci.coppa.services.pa.studyresourcingservice.common.StudyResourcingServiceI;
import gov.nih.nci.iso21090.extensions.Id;
import gov.nih.nci.pa.iso.util.IiConverter;

import java.rmi.RemoteException;

import org.apache.axis.client.Stub;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.globus.gsi.GlobusCredential;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 *
 * @created by Introduce Toolkit version 1.3
 */
public class StudyResourcingServiceClient extends StudyResourcingServiceClientBase implements StudyResourcingServiceI {

    public StudyResourcingServiceClient(String url) throws MalformedURIException, RemoteException {
        this(url,null);
    }

    public StudyResourcingServiceClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
           super(url,proxy);
    }

    public StudyResourcingServiceClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
           this(epr,null);
    }

    public StudyResourcingServiceClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
           super(epr,proxy);
    }

    public static void usage(){
        System.out.println(StudyResourcingServiceClient.class.getName() + " -url <service url>");
    }

    public static void main(String [] args){
        System.out.println("Running the Grid Service Client");
        try{
        if(!(args.length < 2)){
            if(args[0].equals("-url")){
              StudyResourcingServiceClient client = new StudyResourcingServiceClient(args[1]);

              System.out.println("Getting StudyResourcing by ID");
              getById(client);

              System.out.println("Getting Summary by Protocol ID");
              getSummaryByProtocolId(client);

              System.out.println("Getting StudyResourcings by Protocol ID");
              getByProtocolId(client);
            } else {
                usage();
                System.exit(1);
            }
        } else {
            usage();
            System.exit(1);
        }
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    private static void getById(StudyResourcingServiceClient client) throws RemoteException, PAFault {
        Id id = new Id();
        id.setRoot(IiConverter.STUDY_RESOURCING_ROOT);
        id.setIdentifierName(IiConverter.STUDY_RESOURCING_IDENTIFIER_NAME);
        id.setExtension("27445");
        StudyResourcing result = client.getStudyResourceByID(id);
        System.out.println(ToStringBuilder.reflectionToString(result, ToStringStyle.MULTI_LINE_STYLE));
    }

    private static void getSummaryByProtocolId(StudyResourcingServiceClient client) throws RemoteException, PAFault {
        Id id = new Id();
        id.setRoot(IiConverter.STUDY_PROTOCOL_ROOT);
        id.setIdentifierName(IiConverter.STUDY_PROTOCOL_IDENTIFIER_NAME);
        id.setExtension("27426");
        StudyResourcing result = client.getSummaryForReportedResource(id);
        System.out.println(ToStringBuilder.reflectionToString(result, ToStringStyle.MULTI_LINE_STYLE));
    }

    private static void getByProtocolId(StudyResourcingServiceClient client) throws RemoteException, PAFault {
        Id id = new Id();
        id.setRoot(IiConverter.STUDY_PROTOCOL_ROOT);
        id.setIdentifierName(IiConverter.STUDY_PROTOCOL_IDENTIFIER_NAME);
        id.setExtension("27426");
        StudyResourcing[] results = client.getStudyResourceByStudyProtocol(id);

        if (results == null) {
            System.out.println("Get StudyResourcing by StudyProtocol ID results were null!");
        } else {
            System.out.println("Get StudyResourcing by StudyProtocol ID Found: " + results.length);
        }
        for (StudyResourcing result : results) {
            System.out.println(ToStringBuilder.reflectionToString(result.getIdentifier()));
        }

    }

  public gov.nih.nci.coppa.services.pa.StudyResourcing getSummaryForReportedResource(gov.nih.nci.iso21090.extensions.Id studyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSummaryForReportedResource");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetSummaryForReportedResourceRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetSummaryForReportedResourceRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetSummaryForReportedResourceRequestStudyProtocolId studyProtocolIdContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetSummaryForReportedResourceRequestStudyProtocolId();
    studyProtocolIdContainer.setId(studyProtocolId);
    params.setStudyProtocolId(studyProtocolIdContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetSummaryForReportedResourceResponse boxedResult = portType.getSummaryForReportedResource(params);
    return boxedResult.getStudyResourcing();
    }
  }

  public gov.nih.nci.coppa.services.pa.StudyResourcing updateStudyResourcing(gov.nih.nci.coppa.services.pa.StudyResourcing studyResourcing) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateStudyResourcing");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.UpdateStudyResourcingRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.UpdateStudyResourcingRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.UpdateStudyResourcingRequestStudyResourcing studyResourcingContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.UpdateStudyResourcingRequestStudyResourcing();
    studyResourcingContainer.setStudyResourcing(studyResourcing);
    params.setStudyResourcing(studyResourcingContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.UpdateStudyResourcingResponse boxedResult = portType.updateStudyResourcing(params);
    return boxedResult.getStudyResourcing();
    }
  }

  public gov.nih.nci.coppa.services.pa.StudyResourcing createStudyResourcing(gov.nih.nci.coppa.services.pa.StudyResourcing studyResourcing) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"createStudyResourcing");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.CreateStudyResourcingRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.CreateStudyResourcingRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.CreateStudyResourcingRequestStudyResourcing studyResourcingContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.CreateStudyResourcingRequestStudyResourcing();
    studyResourcingContainer.setStudyResourcing(studyResourcing);
    params.setStudyResourcing(studyResourcingContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.CreateStudyResourcingResponse boxedResult = portType.createStudyResourcing(params);
    return boxedResult.getStudyResourcing();
    }
  }

  public gov.nih.nci.coppa.services.pa.StudyResourcing[] getStudyResourceByStudyProtocol(gov.nih.nci.iso21090.extensions.Id studyProtocolId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getStudyResourceByStudyProtocol");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByStudyProtocolRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByStudyProtocolRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByStudyProtocolRequestStudyProtocolId studyProtocolIdContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByStudyProtocolRequestStudyProtocolId();
    studyProtocolIdContainer.setId(studyProtocolId);
    params.setStudyProtocolId(studyProtocolIdContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByStudyProtocolResponse boxedResult = portType.getStudyResourceByStudyProtocol(params);
    return boxedResult.getStudyResourcing();
    }
  }

  public gov.nih.nci.coppa.services.pa.StudyResourcing getStudyResourceByID(gov.nih.nci.iso21090.extensions.Id studyResourceId) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getStudyResourceByID");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByIDRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByIDRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByIDRequestStudyResourceId studyResourceIdContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByIDRequestStudyResourceId();
    studyResourceIdContainer.setId(studyResourceId);
    params.setStudyResourceId(studyResourceIdContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.GetStudyResourceByIDResponse boxedResult = portType.getStudyResourceByID(params);
    return boxedResult.getStudyResourcing();
    }
  }

  public void deleteStudyResourceByID(gov.nih.nci.coppa.services.pa.StudyResourcing studyResourcing) throws RemoteException, gov.nih.nci.coppa.services.pa.faults.PAFault {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"deleteStudyResourceByID");
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.DeleteStudyResourceByIDRequest params = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.DeleteStudyResourceByIDRequest();
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.DeleteStudyResourceByIDRequestStudyResourcing studyResourcingContainer = new gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.DeleteStudyResourceByIDRequestStudyResourcing();
    studyResourcingContainer.setStudyResourcing(studyResourcing);
    params.setStudyResourcing(studyResourcingContainer);
    gov.nih.nci.coppa.services.pa.studyresourcingservice.stubs.DeleteStudyResourceByIDResponse boxedResult = portType.deleteStudyResourceByID(params);
    }
  }

}
